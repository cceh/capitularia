/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/front.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5TGlrZVRvQXJyYXkuanM/NDY5OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheUxpa2VUb0FycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!**************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzPzg4ZGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheVdpdGhIb2xlczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aG91dEhvbGVzLmpzPzQzMjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLG1CQUFPLENBQUMseUZBQW9COztBQUVuRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRob3V0SG9sZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXlcIik7XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRob3V0SG9sZXM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanM/YzZlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3I7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!***************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2l0ZXJhYmxlVG9BcnJheS5qcz84YjJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2l0ZXJhYmxlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/iterableToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!********************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzPzhlYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkNBQTZDLCtCQUErQjtBQUM1RTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaXRlcmFibGVUb0FycmF5TGltaXQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!***************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlUmVzdC5qcz8yNWNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9ub25JdGVyYWJsZVJlc3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlU3ByZWFkLmpzP2I5NmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlU3ByZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfbm9uSXRlcmFibGVTcHJlYWQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/nonIterableSpread.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!*************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"../../node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"../../node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXkuanM/ZTA3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyxxRkFBa0I7O0FBRS9DLDJCQUEyQixtQkFBTyxDQUFDLGlHQUF3Qjs7QUFFM0QsaUNBQWlDLG1CQUFPLENBQUMsNkdBQThCOztBQUV2RSxzQkFBc0IsbUJBQU8sQ0FBQyx1RkFBbUI7O0FBRWpEO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRoSG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXlMaW1pdCA9IHJlcXVpcmUoXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdFwiKTtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2xpY2VkVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ \"../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\");\n\nvar iterableToArray = __webpack_require__(/*! ./iterableToArray */ \"../../node_modules/@babel/runtime/helpers/iterableToArray.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ \"../../node_modules/@babel/runtime/helpers/nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5LmpzPzczNGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0JBQXdCLG1CQUFPLENBQUMsMkZBQXFCOztBQUVyRCxzQkFBc0IsbUJBQU8sQ0FBQyx1RkFBbUI7O0FBRWpELGlDQUFpQyxtQkFBTyxDQUFDLDZHQUE4Qjs7QUFFdkUsd0JBQXdCLG1CQUFPLENBQUMsMkZBQXFCOztBQUVyRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlXaXRob3V0SG9sZXMgPSByZXF1aXJlKFwiLi9hcnJheVdpdGhvdXRIb2xlc1wiKTtcblxudmFyIGl0ZXJhYmxlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2l0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXlcIik7XG5cbnZhciBub25JdGVyYWJsZVNwcmVhZCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlU3ByZWFkXCIpO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdG9Db25zdW1hYmxlQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/toConsumableArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!**************************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzc1ZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLG1CQUFPLENBQUMseUZBQW9COztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5TGlrZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9hcnJheUxpa2VUb0FycmF5XCIpO1xuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/regenerator/index.js":
/*!*********************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/regenerator/index.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"../../node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcz9jMTc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDhFQUFxQiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "../../node_modules/regenerator-runtime/runtime.js":
/*!****************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/regenerator-runtime/runtime.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./src/js/front.js":
/*!*************************!*\
  !*** ./src/js/front.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! selector */ \"./src/js/selector.js\");\n/* harmony import */ var results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! results */ \"./src/js/results.js\");\n\n\n\n/** @module plugins/collation/front */\n\n\n/**\n * We use webpack as a workaround to load javascript modules in Wordpress.\n * Wordpress cannot load javascript modules thru enqueue_script () because it\n * lacks an option to specify type=\"module\" on the <script> element.  Webpack\n * also packs babel-runtime for us.  babel-runtime is required for async\n * functions.\n\n * @file\n */\n// TODO: webpack hot-reloading?\n\n/**\n * The vue.js instance that manages the whole page.\n * @class module:plugins/collation/front.VueFront\n */\n\nvar app = new Vue({\n  data: function data() {\n    return {\n      'sections': [{}],\n      'collating': false\n    };\n  },\n\n  /** @lends module:plugins/collation/front.VueFront.prototype */\n  'methods': {\n    /**\n     * Bundle all parameters for on_collate () and on_save_config ().\n     *\n     * @returns {Object} The parameters for the collate REST API call.\n     */\n    ajax_params: function ajax_params() {\n      return {\n        'collate': this.$refs.selector.map(function (sel) {\n          var data = _.pick(sel.$data, 'bk', 'corresp', 'later_hands');\n\n          data.witnesses = sel.selected;\n          return data;\n        })\n      };\n    },\n    on_collate: function on_collate() {\n      // click on collate button\n      var vm = this;\n      vm.collating = true;\n      var p = this.$refs.results.collate(this.ajax_params());\n      p.always(function () {\n        vm.collating = false;\n      });\n    },\n\n    /**\n     * Load configuration from a user-local file.  Called from the\n     * file dialog ok button.\n     */\n    on_load_config: function on_load_config(event) {\n      var vm = this;\n      var file_input = event.target;\n      var files = file_input.files;\n\n      if (files.length === 1) {\n        var reader = new FileReader();\n\n        reader.onload = /*#__PURE__*/function () {\n          var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(e) {\n            var json;\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    json = JSON.parse(e.target.result);\n                    vm.sections = json.collate;\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        reader.readAsText(files[0]);\n      }\n\n      file_input.value = null; // make it fire again even on the same file\n\n      return false; // don't submit form\n    },\n\n    /**\n     * Save parameters to a user-local file.  Initialize a hidden <a> with a\n     * download link and fake a click on it.\n     */\n    on_save_config: function on_save_config() {\n      var params = this.ajax_params();\n      var url = 'data:text/plain,' + encodeURIComponent(JSON.stringify(params, null, 2));\n      var b = document.getElementById('save-config-a');\n      b.setAttribute('href', url);\n      b.click();\n    },\n    on_add_section: function on_add_section() {\n      // add an unconfigured section\n      this.sections.push({});\n    },\n    on_reordered: function on_reordered(dummy_new_order) {// the user reordered the witnesses in the results table\n    }\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  app.$mount('#vm-cap-collation-user');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZnJvbnQuanM/OTU5MSJdLCJuYW1lcyI6WyJhcHAiLCJWdWUiLCJkYXRhIiwiYWpheF9wYXJhbXMiLCIkcmVmcyIsInNlbGVjdG9yIiwibWFwIiwic2VsIiwiXyIsInBpY2siLCIkZGF0YSIsIndpdG5lc3NlcyIsInNlbGVjdGVkIiwib25fY29sbGF0ZSIsInZtIiwiY29sbGF0aW5nIiwicCIsInJlc3VsdHMiLCJjb2xsYXRlIiwiYWx3YXlzIiwib25fbG9hZF9jb25maWciLCJldmVudCIsImZpbGVfaW5wdXQiLCJ0YXJnZXQiLCJmaWxlcyIsImxlbmd0aCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJlIiwianNvbiIsIkpTT04iLCJwYXJzZSIsInJlc3VsdCIsInNlY3Rpb25zIiwicmVhZEFzVGV4dCIsInZhbHVlIiwib25fc2F2ZV9jb25maWciLCJwYXJhbXMiLCJ1cmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzdHJpbmdpZnkiLCJiIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNldEF0dHJpYnV0ZSIsImNsaWNrIiwib25fYWRkX3NlY3Rpb24iLCJwdXNoIiwib25fcmVvcmRlcmVkIiwiZHVtbXlfbmV3X29yZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIiRtb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFVQTs7QUFFQTs7Ozs7QUFJQSxJQUFNQSxHQUFHLEdBQUcsSUFBSUMsR0FBSixDQUFTO0FBQ2pCQyxNQURpQixrQkFDVDtBQUNKLFdBQU87QUFDSCxrQkFBYyxDQUFDLEVBQUQsQ0FEWDtBQUVILG1CQUFjO0FBRlgsS0FBUDtBQUlILEdBTmdCOztBQU9qQjtBQUNBLGFBQVk7QUFDUjs7Ozs7QUFLQUMsZUFOUSx5QkFNTztBQUNYLGFBQU87QUFDSCxtQkFBWSxLQUFLQyxLQUFMLENBQVdDLFFBQVgsQ0FBb0JDLEdBQXBCLENBQXlCLFVBQUFDLEdBQUcsRUFBSTtBQUN4QyxjQUFNTCxJQUFJLEdBQUdNLENBQUMsQ0FBQ0MsSUFBRixDQUNURixHQUFHLENBQUNHLEtBREssRUFFVCxJQUZTLEVBRUgsU0FGRyxFQUVRLGFBRlIsQ0FBYjs7QUFJQVIsY0FBSSxDQUFDUyxTQUFMLEdBQWlCSixHQUFHLENBQUNLLFFBQXJCO0FBQ0EsaUJBQU9WLElBQVA7QUFDSCxTQVBXO0FBRFQsT0FBUDtBQVVILEtBakJPO0FBa0JSVyxjQWxCUSx3QkFrQk07QUFDVjtBQUNBLFVBQU1DLEVBQUUsR0FBRyxJQUFYO0FBQ0FBLFFBQUUsQ0FBQ0MsU0FBSCxHQUFlLElBQWY7QUFDQSxVQUFNQyxDQUFDLEdBQUcsS0FBS1osS0FBTCxDQUFXYSxPQUFYLENBQW1CQyxPQUFuQixDQUE0QixLQUFLZixXQUFMLEVBQTVCLENBQVY7QUFDQWEsT0FBQyxDQUFDRyxNQUFGLENBQVUsWUFBTTtBQUFFTCxVQUFFLENBQUNDLFNBQUgsR0FBZSxLQUFmO0FBQXVCLE9BQXpDO0FBQ0gsS0F4Qk87O0FBeUJSOzs7O0FBSUFLLGtCQTdCUSwwQkE2QlFDLEtBN0JSLEVBNkJlO0FBQ25CLFVBQU1QLEVBQUUsR0FBRyxJQUFYO0FBQ0EsVUFBTVEsVUFBVSxHQUFHRCxLQUFLLENBQUNFLE1BQXpCO0FBQ0EsVUFBTUMsS0FBSyxHQUFHRixVQUFVLENBQUNFLEtBQXpCOztBQUNBLFVBQUlBLEtBQUssQ0FBQ0MsTUFBTixLQUFpQixDQUFyQixFQUF3QjtBQUNwQixZQUFNQyxNQUFNLEdBQUcsSUFBSUMsVUFBSixFQUFmOztBQUNBRCxjQUFNLENBQUNFLE1BQVA7QUFBQSx5TEFBZ0IsaUJBQWdCQyxDQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTkMsd0JBRE0sR0FDQ0MsSUFBSSxDQUFDQyxLQUFMLENBQVlILENBQUMsQ0FBQ04sTUFBRixDQUFTVSxNQUFyQixDQUREO0FBRVpuQixzQkFBRSxDQUFDb0IsUUFBSCxHQUFjSixJQUFJLENBQUNaLE9BQW5COztBQUZZO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBQWhCOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUlBUSxjQUFNLENBQUNTLFVBQVAsQ0FBbUJYLEtBQUssQ0FBQyxDQUFELENBQXhCO0FBQ0g7O0FBQ0RGLGdCQUFVLENBQUNjLEtBQVgsR0FBbUIsSUFBbkIsQ0FabUIsQ0FZTzs7QUFDMUIsYUFBTyxLQUFQLENBYm1CLENBYUw7QUFDakIsS0EzQ087O0FBNENSOzs7O0FBSUFDLGtCQWhEUSw0QkFnRFU7QUFDZCxVQUFNQyxNQUFNLEdBQUcsS0FBS25DLFdBQUwsRUFBZjtBQUNBLFVBQU1vQyxHQUFHLEdBQUcscUJBQXFCQyxrQkFBa0IsQ0FBRVQsSUFBSSxDQUFDVSxTQUFMLENBQWdCSCxNQUFoQixFQUF3QixJQUF4QixFQUE4QixDQUE5QixDQUFGLENBQW5EO0FBQ0EsVUFBTUksQ0FBQyxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBeUIsZUFBekIsQ0FBVjtBQUNBRixPQUFDLENBQUNHLFlBQUYsQ0FBZ0IsTUFBaEIsRUFBd0JOLEdBQXhCO0FBQ0FHLE9BQUMsQ0FBQ0ksS0FBRjtBQUNILEtBdERPO0FBdURSQyxrQkF2RFEsNEJBdURVO0FBQ2Q7QUFDQSxXQUFLYixRQUFMLENBQWNjLElBQWQsQ0FBb0IsRUFBcEI7QUFDSCxLQTFETztBQTJEUkMsZ0JBM0RRLHdCQTJETUMsZUEzRE4sRUEyRHVCLENBQzNCO0FBQ0g7QUE3RE87QUFSSyxDQUFULENBQVo7QUF5RUFQLFFBQVEsQ0FBQ1EsZ0JBQVQsQ0FBMkIsa0JBQTNCLEVBQStDLFlBQVk7QUFDdkRuRCxLQUFHLENBQUNvRCxNQUFKLENBQVksd0JBQVo7QUFDSCxDQUZEIiwiZmlsZSI6Ii4vc3JjL2pzL2Zyb250LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBtb2R1bGUgcGx1Z2lucy9jb2xsYXRpb24vZnJvbnQgKi9cblxuaW1wb3J0ICdzZWxlY3Rvcic7XG5pbXBvcnQgJ3Jlc3VsdHMnO1xuXG4vKipcbiAqIFdlIHVzZSB3ZWJwYWNrIGFzIGEgd29ya2Fyb3VuZCB0byBsb2FkIGphdmFzY3JpcHQgbW9kdWxlcyBpbiBXb3JkcHJlc3MuXG4gKiBXb3JkcHJlc3MgY2Fubm90IGxvYWQgamF2YXNjcmlwdCBtb2R1bGVzIHRocnUgZW5xdWV1ZV9zY3JpcHQgKCkgYmVjYXVzZSBpdFxuICogbGFja3MgYW4gb3B0aW9uIHRvIHNwZWNpZnkgdHlwZT1cIm1vZHVsZVwiIG9uIHRoZSA8c2NyaXB0PiBlbGVtZW50LiAgV2VicGFja1xuICogYWxzbyBwYWNrcyBiYWJlbC1ydW50aW1lIGZvciB1cy4gIGJhYmVsLXJ1bnRpbWUgaXMgcmVxdWlyZWQgZm9yIGFzeW5jXG4gKiBmdW5jdGlvbnMuXG5cbiAqIEBmaWxlXG4gKi9cblxuLy8gVE9ETzogd2VicGFjayBob3QtcmVsb2FkaW5nP1xuXG4vKipcbiAqIFRoZSB2dWUuanMgaW5zdGFuY2UgdGhhdCBtYW5hZ2VzIHRoZSB3aG9sZSBwYWdlLlxuICogQGNsYXNzIG1vZHVsZTpwbHVnaW5zL2NvbGxhdGlvbi9mcm9udC5WdWVGcm9udFxuICovXG5jb25zdCBhcHAgPSBuZXcgVnVlICh7XG4gICAgZGF0YSAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAnc2VjdGlvbnMnICA6IFt7fV0sXG4gICAgICAgICAgICAnY29sbGF0aW5nJyA6IGZhbHNlLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgLyoqIEBsZW5kcyBtb2R1bGU6cGx1Z2lucy9jb2xsYXRpb24vZnJvbnQuVnVlRnJvbnQucHJvdG90eXBlICovXG4gICAgJ21ldGhvZHMnIDoge1xuICAgICAgICAvKipcbiAgICAgICAgICogQnVuZGxlIGFsbCBwYXJhbWV0ZXJzIGZvciBvbl9jb2xsYXRlICgpIGFuZCBvbl9zYXZlX2NvbmZpZyAoKS5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge09iamVjdH0gVGhlIHBhcmFtZXRlcnMgZm9yIHRoZSBjb2xsYXRlIFJFU1QgQVBJIGNhbGwuXG4gICAgICAgICAqL1xuICAgICAgICBhamF4X3BhcmFtcyAoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICdjb2xsYXRlJyA6IHRoaXMuJHJlZnMuc2VsZWN0b3IubWFwIChzZWwgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gXy5waWNrIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbC4kZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdiaycsICdjb3JyZXNwJywgJ2xhdGVyX2hhbmRzJyxcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS53aXRuZXNzZXMgPSBzZWwuc2VsZWN0ZWQ7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgb25fY29sbGF0ZSAoKSB7XG4gICAgICAgICAgICAvLyBjbGljayBvbiBjb2xsYXRlIGJ1dHRvblxuICAgICAgICAgICAgY29uc3Qgdm0gPSB0aGlzO1xuICAgICAgICAgICAgdm0uY29sbGF0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnN0IHAgPSB0aGlzLiRyZWZzLnJlc3VsdHMuY29sbGF0ZSAodGhpcy5hamF4X3BhcmFtcyAoKSk7XG4gICAgICAgICAgICBwLmFsd2F5cyAoKCkgPT4geyB2bS5jb2xsYXRpbmcgPSBmYWxzZTsgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMb2FkIGNvbmZpZ3VyYXRpb24gZnJvbSBhIHVzZXItbG9jYWwgZmlsZS4gIENhbGxlZCBmcm9tIHRoZVxuICAgICAgICAgKiBmaWxlIGRpYWxvZyBvayBidXR0b24uXG4gICAgICAgICAqL1xuICAgICAgICBvbl9sb2FkX2NvbmZpZyAoZXZlbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IHZtID0gdGhpcztcbiAgICAgICAgICAgIGNvbnN0IGZpbGVfaW5wdXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgICAgICBjb25zdCBmaWxlcyA9IGZpbGVfaW5wdXQuZmlsZXM7XG4gICAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIgKCk7XG4gICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGFzeW5jIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlIChlLnRhcmdldC5yZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB2bS5zZWN0aW9ucyA9IGpzb24uY29sbGF0ZTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0IChmaWxlc1swXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaWxlX2lucHV0LnZhbHVlID0gbnVsbDsgIC8vIG1ha2UgaXQgZmlyZSBhZ2FpbiBldmVuIG9uIHRoZSBzYW1lIGZpbGVcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gZG9uJ3Qgc3VibWl0IGZvcm1cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhdmUgcGFyYW1ldGVycyB0byBhIHVzZXItbG9jYWwgZmlsZS4gIEluaXRpYWxpemUgYSBoaWRkZW4gPGE+IHdpdGggYVxuICAgICAgICAgKiBkb3dubG9hZCBsaW5rIGFuZCBmYWtlIGEgY2xpY2sgb24gaXQuXG4gICAgICAgICAqL1xuICAgICAgICBvbl9zYXZlX2NvbmZpZyAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLmFqYXhfcGFyYW1zICgpO1xuICAgICAgICAgICAgY29uc3QgdXJsID0gJ2RhdGE6dGV4dC9wbGFpbiwnICsgZW5jb2RlVVJJQ29tcG9uZW50IChKU09OLnN0cmluZ2lmeSAocGFyYW1zLCBudWxsLCAyKSk7XG4gICAgICAgICAgICBjb25zdCBiID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgKCdzYXZlLWNvbmZpZy1hJyk7XG4gICAgICAgICAgICBiLnNldEF0dHJpYnV0ZSAoJ2hyZWYnLCB1cmwpO1xuICAgICAgICAgICAgYi5jbGljayAoKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25fYWRkX3NlY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gYWRkIGFuIHVuY29uZmlndXJlZCBzZWN0aW9uXG4gICAgICAgICAgICB0aGlzLnNlY3Rpb25zLnB1c2ggKHt9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25fcmVvcmRlcmVkIChkdW1teV9uZXdfb3JkZXIpIHtcbiAgICAgICAgICAgIC8vIHRoZSB1c2VyIHJlb3JkZXJlZCB0aGUgd2l0bmVzc2VzIGluIHRoZSByZXN1bHRzIHRhYmxlXG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICgnRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBhcHAuJG1vdW50ICgnI3ZtLWNhcC1jb2xsYXRpb24tdXNlcicpO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/front.js\n");

/***/ }),

/***/ "./src/js/results.js":
/*!***************************!*\
  !*** ./src/js/results.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"../../node_modules/@babel/runtime/helpers/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"../../node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tools */ \"./src/js/tools.js\");\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/** @module plugins/collation/results  */\n\n/**\n * @file\n */\n\n/**\n * The vue.js instance that manages the collation output table.\n * @class module:plugins/collation/results.VueResults\n */\n\nVue.component('cap-collation-results', {\n  'data': function data() {\n    return {\n      'api': null,\n      // API server\n      'corresp': '',\n      'sigla': [],\n      'witnesses': [],\n      'unsorted_tables': [],\n      'tables': [],\n      'hovered': null,\n      // siglum of hovered witness\n      'spinner': false\n    };\n  },\n\n  /** @lends module:plugins/collation/results.VueResults.prototype */\n  'methods': {\n    collate: function collate(data) {\n      var vm = this;\n      vm.tables = [];\n      vm.corresp = data.corresp;\n      vm.spinner = true;\n      data.collate = tools__WEBPACK_IMPORTED_MODULE_2__[\"unroll_witnesses\"](data.collate);\n      var p = $.ajax({\n        'url': vm.api,\n        'type': 'POST',\n        'data': JSON.stringify(data),\n        'contentType': 'application/json; charset=utf-8'\n      });\n      p.done(function () {\n        vm.update_tables(p.responseJSON.witnesses, p.responseJSON.table);\n        vm.sort_like(data.collate);\n      }).always(function () {\n        vm.spinner = false;\n      });\n      return p;\n    },\n\n    /**\n     * Transpose a table returned by CollateX\n     *\n     * Turn rows into columns and vice versa.\n     *\n     * @param {array} matrix The CollateX table\n     *\n     * @return {array} The transposed table\n     */\n    transpose: function transpose(matrix) {\n      var _ref;\n\n      return (_ref = _).zip.apply(_ref, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(matrix));\n    },\n\n    /**\n     * Calculate the cell width in characters\n     *\n     * @param {array} cell The array of tokens in the cell\n     *\n     * @return {integer} The width in characters\n     */\n    cell_width: function cell_width(cell) {\n      var tokens = cell.map(function (token) {\n        return token.t.trim();\n      });\n      return tokens.join(' ').length;\n    },\n\n    /**\n     * Split a table in columns every n characters\n     *\n     * @param {array}   table     The table to split\n     * @param {integer} max_width Split after this many characters\n     *\n     * @return {array} An array of tables\n     */\n    split_table: function split_table(table, max_width) {\n      var _this = this;\n\n      var out_tables = [];\n      var tmp_table = [];\n      var width = 0;\n\n      var _iterator = _createForOfIteratorHelper(table),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var column = _step.value;\n          var column_width = 2 + Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(column.map(function (cell) {\n            return _this.cell_width(cell);\n          })));\n\n          if (width + column_width > max_width) {\n            // start a new table\n            out_tables.push(tmp_table.slice());\n            tmp_table = [];\n            width = 0;\n          }\n\n          tmp_table.push(column);\n          width += column_width;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (tmp_table.length > 0) {\n        out_tables.push(tmp_table);\n      }\n\n      return out_tables;\n    },\n\n    /**\n     * Format a CollateX table into HTML\n     *\n     * The Collate-X response:\n     *\n     * .. code:: json\n     *\n     *    {\n     *      \"witnesses\":[\"A\",\"B\"],\n     *      \"table\":[\n     *        [ [ {\"t\":\"A\",\"ref\":123 } ],      [ {\"t\":\"A\" } ] ],\n     *        [ [ {\"t\":\"black\",\"adj\":true } ], [ {\"t\":\"white\",\"adj\":true } ] ],\n     *        [ [ {\"t\":\"cat\",\"id\":\"xyz\" } ],   [ {\"t\":\"kitten.\",\"n\":\"cat\" } ] ]\n     *      ]\n     *    }\n     *\n     * @param {string[]} sigla The witnesses' sigla in table order\n     * @param {array}    table The collation table in column-major orientation\n     * @param {string[]} order The witnesses' sigla in the order they should be displayed\n     *\n     * @return {Object} The rows of the formatted table\n     */\n    format_table: function format_table(witnesses, table, order) {\n      if (order.length === 0) {\n        return [];\n      }\n\n      var sigla = witnesses.map(function (ms) {\n        return ms.siglum;\n      });\n      var titles = witnesses.map(function (ms) {\n        return ms.title;\n      });\n      var out_table = {\n        'class': '',\n        'rows': []\n      };\n      var is_master = true; // first witness will become the master text\n\n      var master_text = null; // ouput the witnesses in the correct order\n\n      var _iterator2 = _createForOfIteratorHelper(order),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var siglum = _step2.value;\n          var index = sigla.indexOf(siglum);\n\n          if (index === -1) {\n            continue; // user messed with mss. list but didn't start another collation\n          }\n\n          var row = {\n            'siglum': siglum,\n            'title': titles[index],\n            'class': '',\n            'cells': []\n          };\n\n          if (master_text === null) {\n            master_text = table[index];\n          }\n\n          var ms_text = table[index];\n\n          var _iterator3 = _createForOfIteratorHelper(_.zip(ms_text, master_text)),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_step3.value, 2),\n                  ms_set = _step3$value[0],\n                  master_set = _step3$value[1];\n\n              var class_ = 'tokens'; // const master      = master_set.map (token => token.t).join (' ').trim ();\n\n              var text = ms_set.map(function (token) {\n                return token.t;\n              }).join(' ').trim();\n              var norm_master = master_set.map(function (token) {\n                return token.n;\n              }).join(' ').trim();\n              var norm_text = ms_set.map(function (token) {\n                return token.n;\n              }).join(' ').trim();\n\n              if (!is_master && norm_master.toLowerCase() === norm_text.toLowerCase()) {\n                class_ += ' equal';\n              }\n\n              if (text === '') {\n                class_ += ' missing';\n              }\n\n              row.cells.push({\n                'class': class_,\n                'text': text\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          out_table.rows.push(row);\n          is_master = false;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return out_table;\n    },\n    update_tables: function update_tables(witnesses, table) {\n      var _this2 = this;\n\n      this.witnesses = witnesses.map(tools__WEBPACK_IMPORTED_MODULE_2__[\"parse_siglum\"]);\n      var max_width = 120 - Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(this.witnesses.map(function (ms) {\n        return ms.title.length;\n      })));\n      this.unsorted_tables = this.split_table(table, max_width).map(function (t) {\n        return _this2.transpose(t);\n      });\n    },\n    sort_like: function sort_like(order) {\n      var _this3 = this;\n\n      this.tables = this.unsorted_tables.map(function (table) {\n        return _this3.format_table(_this3.witnesses, table, order);\n      });\n\n      if (this.tables.length > 0) {\n        this.tables[0].class = 'first';\n        this.tables[this.tables.length - 1].class = 'last';\n      }\n    },\n    row_class: function row_class(row, dummy_index) {\n      var cls = [];\n      cls.push('sortable');\n\n      if (this.hovered === row.siglum) {\n        cls.push('highlight-witness');\n      }\n\n      return cls;\n    }\n  },\n  mounted: function mounted() {\n    this.api = tools__WEBPACK_IMPORTED_MODULE_2__[\"get_api_entrypoint\"]() + '/collatex/collate';\n  },\n  updated: function updated() {\n    var vm = this;\n    var $tbodies = $(this.$el).find('table.collation tbody');\n    $tbodies.disableSelection().sortable({\n      'items': 'tr.sortable',\n      'handle': 'th.handle',\n      'axis': 'y',\n      'cursor': 'move',\n      'containment': 'parent',\n      'update': function update(event, ui) {\n        var new_order = tools__WEBPACK_IMPORTED_MODULE_2__[\"get_sigla\"](ui.item);\n        vm.sort_like(new_order);\n        vm.$emit('reordered', new_order);\n      }\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/results.js\n");

/***/ }),

/***/ "./src/js/selector.js":
/*!****************************!*\
  !*** ./src/js/selector.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tools */ \"./src/js/tools.js\");\n\n\n\n/** @module plugins/collation/selector  */\n\n/**\n * @file\n */\n\n/**\n * The vue.js instance that manages the section selector(s).\n * @class module:plugins/collation/selector.VueSelector\n */\n\nVue.component('cap-collation-selector', {\n  data: function data() {\n    return {\n      'bk': '',\n      'corresp': '',\n      'later_hands': false,\n      'witnesses': [],\n      // list of sigla (urls in the form: skara-brae-42?hands=XYZ#2)\n      'select_all': false,\n      'bks': [],\n      // the list of bks shown in the dropdown\n      'corresps': [],\n      // the list of corresps shown in the dropdown\n      'bk_id': tools__WEBPACK_IMPORTED_MODULE_2__[\"bk_id\"],\n      // id of bk-textzeuge, make it accessible to the template\n      'spinner': false // if set true shows a spinner\n\n    };\n  },\n  'props': {\n    'config': Object // a config file section if loaded from config\n\n  },\n  'computed': {\n    /** @returns The list of selected sigla in the correct order. */\n    'selected': function selected() {\n      return this.witnesses.filter(function (w) {\n        return w.checked;\n      }).map(function (w) {\n        return w.siglum;\n      });\n    }\n  },\n  'watch': {\n    config: function config() {\n      this.ajax_load_bks();\n    },\n    select_all: function select_all(new_value) {\n      this.check_all(new_value);\n    }\n  },\n\n  /** @lends module:plugins/collation/front.VueFront.prototype */\n  'methods': {\n    /**\n     * Load the bk dropdown.  Called once during setup.\n     */\n    ajax_load_bks: function ajax_load_bks() {\n      var _this = this;\n\n      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n        var vm, response;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                vm = _this;\n                _context.next = 3;\n                return tools__WEBPACK_IMPORTED_MODULE_2__[\"api\"]('/data/capitularies.json/');\n\n              case 3:\n                response = _context.sent;\n                // list of { cap_id, title, transcriptions }\n                // Do not show Ansegis etc.\n                vm.bks = response.filter(function (r) {\n                  return r.cap_id.match(/^BK|^Mordek/);\n                }).map(function (r) {\n                  return r.cap_id;\n                });\n                vm.bk = vm.config.bk || vm.bks[0] || '';\n                _context.next = 8;\n                return vm.ajax_load_corresps(vm.config);\n\n              case 8:\n                vm.later_hands = vm.config.later_hands || false;\n                _context.next = 11;\n                return vm.load_witnesses_carry_selection(vm.config);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n\n    /**\n     * Load the corresps dropdown.  Called if bk changes.\n     */\n    ajax_load_corresps: function ajax_load_corresps() {\n      var _arguments = arguments,\n          _this2 = this;\n\n      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n        var config, vm, response;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                config = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};\n                vm = _this2;\n                _context2.next = 4;\n                return tools__WEBPACK_IMPORTED_MODULE_2__[\"api\"](\"/data/capitulary/\".concat(vm.bk, \"/chapters.json/\"));\n\n              case 4:\n                response = _context2.sent;\n                // list of { chapter, transcriptions }\n                vm.corresps = response.map(function (r) {\n                  return r.cap_id + (r.chapter ? \"_\".concat(r.chapter) : '');\n                });\n                vm.corresp = config.corresp || vm.corresps[0] || '';\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n\n    /**\n     * Load the witnesses table.  Called if corresps changes.\n     */\n    ajax_load_witnesses: function ajax_load_witnesses() {\n      var _this3 = this;\n\n      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n        var vm, response;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                vm = _this3;\n                vm.spinner = true;\n                _context3.next = 4;\n                return tools__WEBPACK_IMPORTED_MODULE_2__[\"api\"](\"/data/corresp/\".concat(vm.corresp, \"/manuscripts.json/\"));\n\n              case 4:\n                response = _context3.sent;\n                // list of { ms_id, n, type }\n                vm.spinner = false;\n                vm.witnesses = response.map(tools__WEBPACK_IMPORTED_MODULE_2__[\"parse_witness_response\"]);\n                vm.witnesses.sort(function (a, b) {\n                  return a.sort_key.localeCompare(b.sort_key);\n                });\n\n                if (!vm.later_hands) {\n                  vm.witnesses = vm.witnesses.filter(function (w) {\n                    return w.type === 'original';\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n\n    /**\n     * Reload the witnesses table while keeping selected items intact (if possible).\n     */\n    load_witnesses_carry_selection: function load_witnesses_carry_selection() {\n      var _arguments2 = arguments,\n          _this4 = this;\n\n      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {\n        var config, vm, selected;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                config = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};\n                vm = _this4;\n                selected = vm.selected.slice();\n                vm.select_all = false;\n                _context4.next = 6;\n                return vm.ajax_load_witnesses();\n\n              case 6:\n                vm.check_these(config.witnesses || selected);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n\n    /**\n     * Check or uncheck all witnesses.\n     */\n    check_all: function check_all(val) {\n      this.witnesses.map(function (w) {\n        w.checked = val;\n        return w;\n      });\n    },\n\n    /**\n     * Check all witnesses in list but don't uncheck any.\n     */\n    check_these: function check_these(sigla) {\n      this.witnesses.map(function (w) {\n        if (sigla.includes(w.siglum)) {\n          w.checked = true;\n        }\n\n        return w;\n      });\n    },\n\n    /**\n     * The class(es) to apply to the witnesses table rows.\n     */\n    row_class: function row_class(dummy_w, dummy_index) {\n      return ['sortable'];\n    },\n\n    /*\n     * User Interface handlers\n     */\n    on_select_bk: function on_select_bk(event) {\n      var _this5 = this;\n\n      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {\n        var vm;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                // click on button in dropdown\n                vm = _this5;\n                vm.bk = event.target.getAttribute('data-bk');\n                _context5.next = 4;\n                return vm.ajax_load_corresps();\n\n              case 4:\n                _context5.next = 6;\n                return vm.load_witnesses_carry_selection();\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    on_select_corresp: function on_select_corresp(event) {\n      // click on button in dropdown\n      this.corresp = event.target.getAttribute('data-corresp');\n      this.load_witnesses_carry_selection();\n    },\n    on_later_hands: function on_later_hands(event) {\n      // click on later hands checkbox\n      // it is much easier to implement this by hand than to figure out\n      // how to unwatch a variable while programmatically changing it\n      // this.later_hands = event.target.checked;\n      this.load_witnesses_carry_selection();\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6() {\n      var vm;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              vm = _this6;\n              _context6.next = 3;\n              return vm.ajax_load_bks();\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  updated: function updated() {\n    var vm = this;\n    var $tbody = $(vm.$el).find('table.witnesses tbody');\n    $tbody.disableSelection().sortable({\n      'items': 'tr.sortable',\n      'handle': 'th.handle',\n      'axis': 'y',\n      'cursor': 'move',\n      'containment': 'parent'\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvc2VsZWN0b3IuanM/NzMwZSJdLCJuYW1lcyI6WyJWdWUiLCJjb21wb25lbnQiLCJkYXRhIiwidG9vbHMiLCJPYmplY3QiLCJ3aXRuZXNzZXMiLCJmaWx0ZXIiLCJ3IiwiY2hlY2tlZCIsIm1hcCIsInNpZ2x1bSIsImNvbmZpZyIsImFqYXhfbG9hZF9ia3MiLCJzZWxlY3RfYWxsIiwibmV3X3ZhbHVlIiwiY2hlY2tfYWxsIiwidm0iLCJyZXNwb25zZSIsImJrcyIsInIiLCJjYXBfaWQiLCJtYXRjaCIsImJrIiwiYWpheF9sb2FkX2NvcnJlc3BzIiwibGF0ZXJfaGFuZHMiLCJsb2FkX3dpdG5lc3Nlc19jYXJyeV9zZWxlY3Rpb24iLCJjb3JyZXNwcyIsImNoYXB0ZXIiLCJjb3JyZXNwIiwiYWpheF9sb2FkX3dpdG5lc3NlcyIsInNwaW5uZXIiLCJzb3J0IiwiYSIsImIiLCJzb3J0X2tleSIsImxvY2FsZUNvbXBhcmUiLCJ0eXBlIiwic2VsZWN0ZWQiLCJzbGljZSIsImNoZWNrX3RoZXNlIiwidmFsIiwic2lnbGEiLCJpbmNsdWRlcyIsInJvd19jbGFzcyIsImR1bW15X3ciLCJkdW1teV9pbmRleCIsIm9uX3NlbGVjdF9iayIsImV2ZW50IiwidGFyZ2V0IiwiZ2V0QXR0cmlidXRlIiwib25fc2VsZWN0X2NvcnJlc3AiLCJvbl9sYXRlcl9oYW5kcyIsIm1vdW50ZWQiLCJ1cGRhdGVkIiwiJHRib2R5IiwiJCIsIiRlbCIsImZpbmQiLCJkaXNhYmxlU2VsZWN0aW9uIiwic29ydGFibGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOzs7QUFJQTtBQUVBOzs7OztBQUtBQSxHQUFHLENBQUNDLFNBQUosQ0FBZSx3QkFBZixFQUF5QztBQUNyQ0MsTUFEcUMsa0JBQzdCO0FBQ0osV0FBTztBQUNILFlBQWdCLEVBRGI7QUFFSCxpQkFBZ0IsRUFGYjtBQUdILHFCQUFnQixLQUhiO0FBSUgsbUJBQWdCLEVBSmI7QUFJb0I7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QTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFNMUIsS0E3Rk87QUE4RlJ5QixxQkE5RlEsNkJBOEZXSCxLQTlGWCxFQThGa0I7QUFDdEI7QUFDQSxXQUFLbkIsT0FBTCxHQUFlbUIsS0FBSyxDQUFDQyxNQUFOLENBQWFDLFlBQWIsQ0FBMkIsY0FBM0IsQ0FBZjtBQUNBLFdBQUt4Qiw4QkFBTDtBQUNILEtBbEdPO0FBbUdSMEIsa0JBbkdRLDBCQW1HUUosS0FuR1IsRUFtR2U7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFLdEIsOEJBQUw7QUFDSDtBQXpHTyxHQTVCeUI7QUF1SS9CMkIsU0F2SStCLHFCQXVJcEI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUHBDLGdCQURPLEdBQ0YsTUFERTtBQUFBO0FBQUEscUJBRVBBLEVBQUUsQ0FBQ0osYUFBSCxFQUZPOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR2hCLEdBMUlvQztBQTJJckN5QyxTQTNJcUMscUJBMkkxQjtBQUNQLFFBQU1yQyxFQUFFLEdBQUcsSUFBWDtBQUNBLFFBQU1zQyxNQUFNLEdBQUdDLENBQUMsQ0FBRXZDLEVBQUUsQ0FBQ3dDLEdBQUwsQ0FBRCxDQUFXQyxJQUFYLENBQWlCLHVCQUFqQixDQUFmO0FBQ0FILFVBQU0sQ0FBQ0ksZ0JBQVAsR0FBMkJDLFFBQTNCLENBQXFDO0FBQ2pDLGVBQWdCLGFBRGlCO0FBRWpDLGdCQUFnQixXQUZpQjtBQUdqQyxjQUFnQixHQUhpQjtBQUlqQyxnQkFBZ0IsTUFKaUI7QUFLakMscUJBQWdCO0FBTGlCLEtBQXJDO0FBT0g7QUFySm9DLENBQXpDIiwiZmlsZSI6Ii4vc3JjL2pzL3NlbGVjdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBtb2R1bGUgcGx1Z2lucy9jb2xsYXRpb24vc2VsZWN0b3IgICovXG5cbi8qKlxuICogQGZpbGVcbiAqL1xuXG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd0b29scyc7XG5cbi8qKlxuICogVGhlIHZ1ZS5qcyBpbnN0YW5jZSB0aGF0IG1hbmFnZXMgdGhlIHNlY3Rpb24gc2VsZWN0b3IocykuXG4gKiBAY2xhc3MgbW9kdWxlOnBsdWdpbnMvY29sbGF0aW9uL3NlbGVjdG9yLlZ1ZVNlbGVjdG9yXG4gKi9cblxuVnVlLmNvbXBvbmVudCAoJ2NhcC1jb2xsYXRpb24tc2VsZWN0b3InLCB7XG4gICAgZGF0YSAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAnYmsnICAgICAgICAgIDogJycsXG4gICAgICAgICAgICAnY29ycmVzcCcgICAgIDogJycsXG4gICAgICAgICAgICAnbGF0ZXJfaGFuZHMnIDogZmFsc2UsXG4gICAgICAgICAgICAnd2l0bmVzc2VzJyAgIDogW10sICAgIC8vIGxpc3Qgb2Ygc2lnbGEgKHVybHMgaW4gdGhlIGZvcm06IHNrYXJhLWJyYWUtNDI/aGFuZHM9WFlaIzIpXG4gICAgICAgICAgICAnc2VsZWN0X2FsbCcgIDogZmFsc2UsXG4gICAgICAgICAgICAnYmtzJyAgICAgICAgIDogW10sICAgIC8vIHRoZSBsaXN0IG9mIGJrcyBzaG93biBpbiB0aGUgZHJvcGRvd25cbiAgICAgICAgICAgICdjb3JyZXNwcycgICAgOiBbXSwgICAgLy8gdGhlIGxpc3Qgb2YgY29ycmVzcHMgc2hvd24gaW4gdGhlIGRyb3Bkb3duXG4gICAgICAgICAgICAnYmtfaWQnICAgICAgIDogdG9vbHMuYmtfaWQsIC8vIGlkIG9mIGJrLXRleHR6ZXVnZSwgbWFrZSBpdCBhY2Nlc3NpYmxlIHRvIHRoZSB0ZW1wbGF0ZVxuICAgICAgICAgICAgJ3NwaW5uZXInICAgICA6IGZhbHNlLCAvLyBpZiBzZXQgdHJ1ZSBzaG93cyBhIHNwaW5uZXJcbiAgICAgICAgfTtcbiAgICB9LFxuICAgICdwcm9wcycgOiB7XG4gICAgICAgICdjb25maWcnIDogT2JqZWN0LCAvLyBhIGNvbmZpZyBmaWxlIHNlY3Rpb24gaWYgbG9hZGVkIGZyb20gY29uZmlnXG4gICAgfSxcbiAgICAnY29tcHV0ZWQnIDoge1xuICAgICAgICAvKiogQHJldHVybnMgVGhlIGxpc3Qgb2Ygc2VsZWN0ZWQgc2lnbGEgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuICovXG4gICAgICAgICdzZWxlY3RlZCcgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy53aXRuZXNzZXMuZmlsdGVyICh3ID0+IHcuY2hlY2tlZCkubWFwICh3ID0+IHcuc2lnbHVtKTtcbiAgICAgICAgfSxcbiAgICB9LFxuICAgICd3YXRjaCcgOiB7XG4gICAgICAgIGNvbmZpZyAoKSB7IHRoaXMuYWpheF9sb2FkX2JrcyAoKTsgfSxcbiAgICAgICAgc2VsZWN0X2FsbCAobmV3X3ZhbHVlKSB7IHRoaXMuY2hlY2tfYWxsIChuZXdfdmFsdWUpOyB9LFxuICAgIH0sXG4gICAgLyoqIEBsZW5kcyBtb2R1bGU6cGx1Z2lucy9jb2xsYXRpb24vZnJvbnQuVnVlRnJvbnQucHJvdG90eXBlICovXG4gICAgJ21ldGhvZHMnIDoge1xuICAgICAgICAvKipcbiAgICAgICAgICogTG9hZCB0aGUgYmsgZHJvcGRvd24uICBDYWxsZWQgb25jZSBkdXJpbmcgc2V0dXAuXG4gICAgICAgICAqL1xuICAgICAgICBhc3luYyBhamF4X2xvYWRfYmtzICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHZtID0gdGhpcztcblxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0b29scy5hcGkgKCcvZGF0YS9jYXBpdHVsYXJpZXMuanNvbi8nKTtcbiAgICAgICAgICAgIC8vIGxpc3Qgb2YgeyBjYXBfaWQsIHRpdGxlLCB0cmFuc2NyaXB0aW9ucyB9XG4gICAgICAgICAgICAvLyBEbyBub3Qgc2hvdyBBbnNlZ2lzIGV0Yy5cbiAgICAgICAgICAgIHZtLmJrcyA9IHJlc3BvbnNlLmZpbHRlciAoKHIpID0+IHIuY2FwX2lkLm1hdGNoICgvXkJLfF5Nb3JkZWsvKSkubWFwICgocikgPT4gci5jYXBfaWQpO1xuICAgICAgICAgICAgdm0uYmsgPSB2bS5jb25maWcuYmsgfHwgdm0uYmtzWzBdIHx8ICcnO1xuXG4gICAgICAgICAgICBhd2FpdCB2bS5hamF4X2xvYWRfY29ycmVzcHMgKHZtLmNvbmZpZyk7XG4gICAgICAgICAgICB2bS5sYXRlcl9oYW5kcyA9IHZtLmNvbmZpZy5sYXRlcl9oYW5kcyB8fCBmYWxzZTtcbiAgICAgICAgICAgIGF3YWl0IHZtLmxvYWRfd2l0bmVzc2VzX2NhcnJ5X3NlbGVjdGlvbiAodm0uY29uZmlnKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIExvYWQgdGhlIGNvcnJlc3BzIGRyb3Bkb3duLiAgQ2FsbGVkIGlmIGJrIGNoYW5nZXMuXG4gICAgICAgICAqL1xuICAgICAgICBhc3luYyBhamF4X2xvYWRfY29ycmVzcHMgKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgICAgICBjb25zdCB2bSA9IHRoaXM7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdG9vbHMuYXBpIChgL2RhdGEvY2FwaXR1bGFyeS8ke3ZtLmJrfS9jaGFwdGVycy5qc29uL2ApO1xuICAgICAgICAgICAgLy8gbGlzdCBvZiB7IGNoYXB0ZXIsIHRyYW5zY3JpcHRpb25zIH1cblxuICAgICAgICAgICAgdm0uY29ycmVzcHMgPSByZXNwb25zZS5tYXAgKChyKSA9PiByLmNhcF9pZCArIChyLmNoYXB0ZXIgPyBgXyR7ci5jaGFwdGVyfWAgOiAnJykpO1xuICAgICAgICAgICAgdm0uY29ycmVzcCA9IGNvbmZpZy5jb3JyZXNwIHx8IHZtLmNvcnJlc3BzWzBdIHx8ICcnO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogTG9hZCB0aGUgd2l0bmVzc2VzIHRhYmxlLiAgQ2FsbGVkIGlmIGNvcnJlc3BzIGNoYW5nZXMuXG4gICAgICAgICAqL1xuICAgICAgICBhc3luYyBhamF4X2xvYWRfd2l0bmVzc2VzICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHZtID0gdGhpcztcblxuICAgICAgICAgICAgdm0uc3Bpbm5lciA9IHRydWU7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRvb2xzLmFwaSAoYC9kYXRhL2NvcnJlc3AvJHt2bS5jb3JyZXNwfS9tYW51c2NyaXB0cy5qc29uL2ApO1xuICAgICAgICAgICAgLy8gbGlzdCBvZiB7IG1zX2lkLCBuLCB0eXBlIH1cbiAgICAgICAgICAgIHZtLnNwaW5uZXIgPSBmYWxzZTtcblxuICAgICAgICAgICAgdm0ud2l0bmVzc2VzID0gcmVzcG9uc2UubWFwICh0b29scy5wYXJzZV93aXRuZXNzX3Jlc3BvbnNlKTtcbiAgICAgICAgICAgIHZtLndpdG5lc3Nlcy5zb3J0ICgoYSwgYikgPT4gYS5zb3J0X2tleS5sb2NhbGVDb21wYXJlIChiLnNvcnRfa2V5KSk7XG5cbiAgICAgICAgICAgIGlmICghdm0ubGF0ZXJfaGFuZHMpIHtcbiAgICAgICAgICAgICAgICB2bS53aXRuZXNzZXMgPSB2bS53aXRuZXNzZXMuZmlsdGVyICh3ID0+IHsgcmV0dXJuIHcudHlwZSA9PT0gJ29yaWdpbmFsJzsgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZWxvYWQgdGhlIHdpdG5lc3NlcyB0YWJsZSB3aGlsZSBrZWVwaW5nIHNlbGVjdGVkIGl0ZW1zIGludGFjdCAoaWYgcG9zc2libGUpLlxuICAgICAgICAgKi9cbiAgICAgICAgYXN5bmMgbG9hZF93aXRuZXNzZXNfY2Fycnlfc2VsZWN0aW9uIChjb25maWcgPSB7fSkge1xuICAgICAgICAgICAgY29uc3Qgdm0gPSB0aGlzO1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB2bS5zZWxlY3RlZC5zbGljZSAoKTtcbiAgICAgICAgICAgIHZtLnNlbGVjdF9hbGwgPSBmYWxzZTtcblxuICAgICAgICAgICAgYXdhaXQgdm0uYWpheF9sb2FkX3dpdG5lc3NlcyAoKTtcbiAgICAgICAgICAgIHZtLmNoZWNrX3RoZXNlIChjb25maWcud2l0bmVzc2VzIHx8IHNlbGVjdGVkKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrIG9yIHVuY2hlY2sgYWxsIHdpdG5lc3Nlcy5cbiAgICAgICAgICovXG4gICAgICAgIGNoZWNrX2FsbCAodmFsKSB7XG4gICAgICAgICAgICB0aGlzLndpdG5lc3Nlcy5tYXAgKHcgPT4ge1xuICAgICAgICAgICAgICAgIHcuY2hlY2tlZCA9IHZhbDtcbiAgICAgICAgICAgICAgICByZXR1cm4gdztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2sgYWxsIHdpdG5lc3NlcyBpbiBsaXN0IGJ1dCBkb24ndCB1bmNoZWNrIGFueS5cbiAgICAgICAgICovXG4gICAgICAgIGNoZWNrX3RoZXNlIChzaWdsYSkge1xuICAgICAgICAgICAgdGhpcy53aXRuZXNzZXMubWFwICh3ID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc2lnbGEuaW5jbHVkZXMgKHcuc2lnbHVtKSkge1xuICAgICAgICAgICAgICAgICAgICB3LmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGNsYXNzKGVzKSB0byBhcHBseSB0byB0aGUgd2l0bmVzc2VzIHRhYmxlIHJvd3MuXG4gICAgICAgICAqL1xuICAgICAgICByb3dfY2xhc3MgKGR1bW15X3csIGR1bW15X2luZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gWydzb3J0YWJsZSddO1xuICAgICAgICB9LFxuICAgICAgICAvKlxuICAgICAgICAgKiBVc2VyIEludGVyZmFjZSBoYW5kbGVyc1xuICAgICAgICAgKi9cbiAgICAgICAgYXN5bmMgb25fc2VsZWN0X2JrIChldmVudCkge1xuICAgICAgICAgICAgLy8gY2xpY2sgb24gYnV0dG9uIGluIGRyb3Bkb3duXG4gICAgICAgICAgICBjb25zdCB2bSA9IHRoaXM7XG4gICAgICAgICAgICB2bS5iayA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUgKCdkYXRhLWJrJyk7XG4gICAgICAgICAgICBhd2FpdCB2bS5hamF4X2xvYWRfY29ycmVzcHMgKCk7XG4gICAgICAgICAgICBhd2FpdCB2bS5sb2FkX3dpdG5lc3Nlc19jYXJyeV9zZWxlY3Rpb24gKCk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uX3NlbGVjdF9jb3JyZXNwIChldmVudCkge1xuICAgICAgICAgICAgLy8gY2xpY2sgb24gYnV0dG9uIGluIGRyb3Bkb3duXG4gICAgICAgICAgICB0aGlzLmNvcnJlc3AgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlICgnZGF0YS1jb3JyZXNwJyk7XG4gICAgICAgICAgICB0aGlzLmxvYWRfd2l0bmVzc2VzX2NhcnJ5X3NlbGVjdGlvbiAoKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25fbGF0ZXJfaGFuZHMgKGV2ZW50KSB7XG4gICAgICAgICAgICAvLyBjbGljayBvbiBsYXRlciBoYW5kcyBjaGVja2JveFxuICAgICAgICAgICAgLy8gaXQgaXMgbXVjaCBlYXNpZXIgdG8gaW1wbGVtZW50IHRoaXMgYnkgaGFuZCB0aGFuIHRvIGZpZ3VyZSBvdXRcbiAgICAgICAgICAgIC8vIGhvdyB0byB1bndhdGNoIGEgdmFyaWFibGUgd2hpbGUgcHJvZ3JhbW1hdGljYWxseSBjaGFuZ2luZyBpdFxuICAgICAgICAgICAgLy8gdGhpcy5sYXRlcl9oYW5kcyA9IGV2ZW50LnRhcmdldC5jaGVja2VkO1xuICAgICAgICAgICAgdGhpcy5sb2FkX3dpdG5lc3Nlc19jYXJyeV9zZWxlY3Rpb24gKCk7XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBhc3luYyBtb3VudGVkICgpIHtcbiAgICAgICAgY29uc3Qgdm0gPSB0aGlzO1xuICAgICAgICBhd2FpdCB2bS5hamF4X2xvYWRfYmtzICgpO1xuICAgIH0sXG4gICAgdXBkYXRlZCAoKSB7XG4gICAgICAgIGNvbnN0IHZtID0gdGhpcztcbiAgICAgICAgY29uc3QgJHRib2R5ID0gJCAodm0uJGVsKS5maW5kICgndGFibGUud2l0bmVzc2VzIHRib2R5Jyk7XG4gICAgICAgICR0Ym9keS5kaXNhYmxlU2VsZWN0aW9uICgpLnNvcnRhYmxlICh7XG4gICAgICAgICAgICAnaXRlbXMnICAgICAgIDogJ3RyLnNvcnRhYmxlJyxcbiAgICAgICAgICAgICdoYW5kbGUnICAgICAgOiAndGguaGFuZGxlJyxcbiAgICAgICAgICAgICdheGlzJyAgICAgICAgOiAneScsXG4gICAgICAgICAgICAnY3Vyc29yJyAgICAgIDogJ21vdmUnLFxuICAgICAgICAgICAgJ2NvbnRhaW5tZW50JyA6ICdwYXJlbnQnLFxuICAgICAgICB9KTtcbiAgICB9LFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/selector.js\n");

/***/ }),

/***/ "./src/js/tools.js":
/*!*************************!*\
  !*** ./src/js/tools.js ***!
  \*************************/
/*! exports provided: bk_id, cap_collation_algorithms, get_api_entrypoint, api, encodeRFC5987ValueChars, sort_key, fix_witness, parse_witness_response, parse_siglum, unroll_witnesses, get_sigla */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bk_id\", function() { return bk_id; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cap_collation_algorithms\", function() { return cap_collation_algorithms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_api_entrypoint\", function() { return get_api_entrypoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"api\", function() { return api; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeRFC5987ValueChars\", function() { return encodeRFC5987ValueChars; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort_key\", function() { return sort_key; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fix_witness\", function() { return fix_witness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_witness_response\", function() { return parse_witness_response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_siglum\", function() { return parse_siglum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unroll_witnesses\", function() { return unroll_witnesses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_sigla\", function() { return get_sigla; });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"../../node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/** @module plugins/collation/tools */\n\n/**\n * @file Contains utility functions for the collation applet.\n */\n\n/** cap_collation_user_front_ajax_object is set by wp_localize_script in function.php. */\n\n/* global cap_collation_user_front_ajax_object */\n\n/**\n * The id of the \"Obertext\".\n * @type {string}\n */\nvar bk_id = 'bk-textzeuge';\n/**\n * The collation algorithms we support.  The Needleman-Wunsch-Gotoh algorithm\n * is available only with our special patched version of CollateX.\n */\n\nvar cap_collation_algorithms = [{\n  'key': 'dekker',\n  'name': 'Dekker'\n}, {\n  'key': 'gst',\n  'name': 'Greedy String Tiling'\n}, {\n  'key': 'medite',\n  'name': 'MEDITE'\n}, {\n  'key': 'needleman-wunsch',\n  'name': 'Needleman-Wunsch'\n}, {\n  'key': 'needleman-wunsch-gotoh',\n  'name': 'Needleman-Wunsch-Gotoh'\n}];\n/**\n * Get the API entrypoint\n *\n * @returns {string} The root URL of the API server.\n */\n\nfunction get_api_entrypoint() {\n  return cap_collation_user_front_ajax_object.api_url;\n}\n/**\n * This calls the API on the API server\n *\n * @param {string} url  The endpoint relative to the API root.\n * @param {Object} data The data to send.\n * @returns {Promise} Promise resolved when call completed.\n */\n\nfunction api(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  data.status = cap_collation_user_front_ajax_object.status;\n  var p = $.ajax({\n    'url': get_api_entrypoint() + url,\n    'data': data\n  });\n  return p;\n}\n/**\n * Build a valid filename to save the config.\n *\n * @param {string} str The string to encode.\n * @returns {string} The encoded string.\n */\n\nfunction encodeRFC5987ValueChars(str) {\n  return encodeURIComponent(str) // Note that although RFC3986 reserves '!', RFC5987 does not,\n  // so we do not need to escape it\n  .replace(/['()]/g, escape) // i.e., %27 %28 %29\n  .replace(/\\*/g, '%2A') // The following are not required for percent-encoding per RFC5987,\n  // so we can allow for a little better readability over the wire: |`^\n  .replace(/%(?:7C|60|5E)/g, unescape);\n}\n/**\n * A key that sorts numbers right\n *\n * @param {string} s Any string.\n * @returns {string} A key derived from the string that sorts numbers right.\n */\n\nfunction sort_key(s) {\n  function fixnum(match, dummy_offset, dummy_string) {\n    return match.length.toString() + match;\n  }\n\n  s = s.replace(/\\d+/, fixnum);\n  return s;\n}\n/**\n * Prepare a witness for display, add human-readable title, i18n.\n *\n * @param {Object} w  The witness to fix\n * @returns {Object}  The fixed witness object\n */\n\nfunction fix_witness(w) {\n  var i18n = cap_collation_user_front_ajax_object; // add check for reactivity\n\n  w.checked = false;\n  w.title = w.siglum;\n  w.title = w.title.replace(/#(\\d+)/, i18n.copy_msg);\n  w.title = w.title.replace(/[?]hands=XYZ/, i18n.corr_msg);\n  w.sort_key = w.title;\n  w.title = w.title.replace(/bk-textzeuge/, i18n.bktz_msg);\n  w.sort_key = w.sort_key.replace(/bk-textzeuge/, '_bk-textzeuge'); // always sort this first\n\n  w.sort_key = sort_key(w.sort_key);\n  return w;\n}\n/**\n * Parse API server response into witness object\n *\n * @param {Object} r  The server response\n * @returns {Object}  The witness struct\n */\n\nfunction parse_witness_response(r) {\n  var siglum = r.ms_id;\n\n  if (r.type !== 'original') {\n    siglum += '?hands=XYZ';\n  }\n\n  if (r.n > 1) {\n    siglum += '#' + r.n;\n  }\n\n  return fix_witness({\n    'siglum': siglum,\n    'type': r.type\n  });\n}\n/**\n * Parse witness siglum into witness object\n *\n * @param {string} siglum  The witness siglum\n * @returns {Object}  The witness object\n */\n\nfunction parse_siglum(siglum) {\n  return fix_witness({\n    'siglum': siglum,\n    'type': siglum.match(/[?]hands=XYZ/) ? 'later_hands' : 'original'\n  });\n}\n/**\n * Unroll collate struct\n *\n * @param {Array} rolled  The collate struct\n * @returns {Array}  The unrolled witness array\n *\n * Turns this:\n    [\n        {\n            \"corresp\": \"BK.40_4\",\n            \"witnesses\": [\n                \"bk-textzeuge\",\n                \"vatikan-bav-chigi-f-iv-75\"\n            ]\n        },\n        {\n            \"corresp\": \"BK.137\",\n            \"witnesses\": [\n                \"bk-textzeuge\",\n                \"kopenhagen-kb-1943-4\",\n                \"paris-bn-lat-2718\"\n            ]\n        }\n    ]\n * into this:\n * [\n *    \"BK.40_4/bk-textzeuge\",\n *    \"BK.40_4/vatikan-bav-chigi-f-iv-75\",\n *    \"BK.137/bk-textzeuge\",\n *    \"BK.137/kopenhagen-kb-1943-4\",\n *    \"BK.137/paris-bn-lat-2718\",\n * ]\n */\n\nfunction unroll_witnesses(rolled) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(rolled.map(function (d) {\n    return d.witnesses.map(function (w) {\n      return \"\".concat(d.corresp, \"/\").concat(w);\n    });\n  })));\n}\nfunction get_sigla(item) {\n  // Get the sigla of all witnesses to collate in user-specified order\n  return $(item).closest('table').find('tr[data-siglum]').map(function () {\n    return this.getAttribute('data-siglum');\n  }).get();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdG9vbHMuanM/NmE3OSJdLCJuYW1lcyI6WyJia19pZCIsImNhcF9jb2xsYXRpb25fYWxnb3JpdGhtcyIsImdldF9hcGlfZW50cnlwb2ludCIsImNhcF9jb2xsYXRpb25fdXNlcl9mcm9udF9hamF4X29iamVjdCIsImFwaV91cmwiLCJhcGkiLCJ1cmwiLCJkYXRhIiwic3RhdHVzIiwicCIsIiQiLCJhamF4IiwiZW5jb2RlUkZDNTk4N1ZhbHVlQ2hhcnMiLCJzdHIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiZXNjYXBlIiwidW5lc2NhcGUiLCJzb3J0X2tleSIsInMiLCJmaXhudW0iLCJtYXRjaCIsImR1bW15X29mZnNldCIsImR1bW15X3N0cmluZyIsImxlbmd0aCIsInRvU3RyaW5nIiwiZml4X3dpdG5lc3MiLCJ3IiwiaTE4biIsImNoZWNrZWQiLCJ0aXRsZSIsInNpZ2x1bSIsImNvcHlfbXNnIiwiY29ycl9tc2ciLCJia3R6X21zZyIsInBhcnNlX3dpdG5lc3NfcmVzcG9uc2UiLCJyIiwibXNfaWQiLCJ0eXBlIiwibiIsInBhcnNlX3NpZ2x1bSIsInVucm9sbF93aXRuZXNzZXMiLCJyb2xsZWQiLCJjb25jYXQiLCJtYXAiLCJkIiwid2l0bmVzc2VzIiwiY29ycmVzcCIsImdldF9zaWdsYSIsIml0ZW0iLCJjbG9zZXN0IiwiZmluZCIsImdldEF0dHJpYnV0ZSIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBOzs7O0FBSUE7O0FBQ0E7O0FBRUE7Ozs7QUFJTyxJQUFNQSxLQUFLLEdBQUcsY0FBZDtBQUVQOzs7OztBQUlPLElBQU1DLHdCQUF3QixHQUFHLENBQ3BDO0FBQUUsU0FBUSxRQUFWO0FBQW9DLFVBQVM7QUFBN0MsQ0FEb0MsRUFFcEM7QUFBRSxTQUFRLEtBQVY7QUFBb0MsVUFBUztBQUE3QyxDQUZvQyxFQUdwQztBQUFFLFNBQVEsUUFBVjtBQUFvQyxVQUFTO0FB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QUMsQ0FBQ0csQ0FBbEI7QUFDSDs7QUFFRCxTQUFPYixXQUFXLENBQUU7QUFDaEIsY0FBV0ssTUFESztBQUVoQixZQUFXSyxDQUFDLENBQUNFO0FBRkcsR0FBRixDQUFsQjtBQUlIO0FBRUQ7Ozs7Ozs7QUFNTyxTQUFTRSxZQUFULENBQXVCVCxNQUF2QixFQUErQjtBQUNsQyxTQUFPTCxXQUFXLENBQUU7QUFDaEIsY0FBV0ssTUFESztBQUVoQixZQUFXQSxNQUFNLENBQUNWLEtBQVAsQ0FBYyxjQUFkLElBQWdDLGFBQWhDLEdBQWdEO0FBRjNDLEdBQUYsQ0FBbEI7QUFJSDtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0NPLFNBQVNvQixnQkFBVCxDQUEyQkMsTUFBM0IsRUFBbUM7QUFBQTs7QUFDdEMsU0FBTyxZQUFHQyxNQUFILDZGQUFlRCxNQUFNLENBQUNFLEdBQVAsQ0FBWSxVQUFBQyxDQUFDO0FBQUEsV0FBSUEsQ0FBQyxDQUFDQyxTQUFGLENBQVlGLEdBQVosQ0FBaUIsVUFBQWpCLENBQUM7QUFBQSx1QkFBT2tCLENBQUMsQ0FBQ0UsT0FBVCxjQUFvQnBCLENBQXBCO0FBQUEsS0FBbEIsQ0FBSjtBQUFBLEdBQWIsQ0FBZixFQUFQO0FBQ0g7QUFFTSxTQUFTcUIsU0FBVCxDQUFvQkMsSUFBcEIsRUFBMEI7QUFDN0I7QUFDQSxTQUFPdkMsQ0FBQyxDQUFFdUMsSUFBRixDQUFELENBQVNDLE9BQVQsQ0FBa0IsT0FBbEIsRUFBMkJDLElBQTNCLENBQWlDLGlCQUFqQyxFQUFvRFAsR0FBcEQsQ0FBeUQsWUFBWTtBQUN4RSxXQUFPLEtBQUtRLFlBQUwsQ0FBbUIsYUFBbkIsQ0FBUDtBQUNILEdBRk0sRUFHRkMsR0FIRSxFQUFQO0FBSUgiLCJmaWxlIjoiLi9zcmMvanMvdG9vbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQG1vZHVsZSBwbHVnaW5zL2NvbGxhdGlvbi90b29scyAqL1xuXG4vKipcbiAqIEBmaWxlIENvbnRhaW5zIHV0aWxpdHkgZnVuY3Rpb25zIGZvciB0aGUgY29sbGF0aW9uIGFwcGxldC5cbiAqL1xuXG4vKiogY2FwX2NvbGxhdGlvbl91c2VyX2Zyb250X2FqYXhfb2JqZWN0IGlzIHNldCBieSB3cF9sb2NhbGl6ZV9zY3JpcHQgaW4gZnVuY3Rpb24ucGhwLiAqL1xuLyogZ2xvYmFsIGNhcF9jb2xsYXRpb25fdXNlcl9mcm9udF9hamF4X29iamVjdCAqL1xuXG4vKipcbiAqIFRoZSBpZCBvZiB0aGUgXCJPYmVydGV4dFwiLlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IGJrX2lkID0gJ2JrLXRleHR6ZXVnZSc7XG5cbi8qKlxuICogVGhlIGNvbGxhdGlvbiBhbGdvcml0aG1zIHdlIHN1cHBvcnQuICBUaGUgTmVlZGxlbWFuLVd1bnNjaC1Hb3RvaCBhbGdvcml0aG1cbiAqIGlzIGF2YWlsYWJsZSBvbmx5IHdpdGggb3VyIHNwZWNpYWwgcGF0Y2hlZCB2ZXJzaW9uIG9mIENvbGxhdGVYLlxuICovXG5leHBvcnQgY29uc3QgY2FwX2NvbGxhdGlvbl9hbGdvcml0aG1zID0gW1xuICAgIHsgJ2tleScgOiAnZGVra2VyJywgICAgICAgICAgICAgICAgICduYW1lJyA6ICdEZWtrZXInIH0sXG4gICAgeyAna2V5JyA6ICdnc3QnLCAgICAgICAgICAgICAgICAgICAgJ25hbWUnIDogJ0dyZWVkeSBTdHJpbmcgVGlsaW5nJyB9LFxuICAgIHsgJ2tleScgOiAnbWVkaXRlJywgICAgICAgICAgICAgICAgICduYW1lJyA6ICdNRURJVEUnIH0sXG4gICAgeyAna2V5JyA6ICduZWVkbGVtYW4td3Vuc2NoJywgICAgICAgJ25hbWUnIDogJ05lZWRsZW1hbi1XdW5zY2gnIH0sXG4gICAgeyAna2V5JyA6ICduZWVkbGVtYW4td3Vuc2NoLWdvdG9oJywgJ25hbWUnIDogJ05lZWRsZW1hbi1XdW5zY2gtR290b2gnIH0sXG5dO1xuXG4vKipcbiAqIEdldCB0aGUgQVBJIGVudHJ5cG9pbnRcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgcm9vdCBVUkwgb2YgdGhlIEFQSSBzZXJ2ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRfYXBpX2VudHJ5cG9pbnQgKCkge1xuICAgIHJldHVybiBjYXBfY29sbGF0aW9uX3VzZXJfZnJvbnRfYWpheF9vYmplY3QuYXBpX3VybDtcbn1cblxuLyoqXG4gKiBUaGlzIGNhbGxzIHRoZSBBUEkgb24gdGhlIEFQSSBzZXJ2ZXJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsICBUaGUgZW5kcG9pbnQgcmVsYXRpdmUgdG8gdGhlIEFQSSByb290LlxuICogQHBhcmFtIHtPYmplY3R9IGRhdGEgVGhlIGRhdGEgdG8gc2VuZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlIHJlc29sdmVkIHdoZW4gY2FsbCBjb21wbGV0ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcGkgKHVybCwgZGF0YSA9IHt9KSB7XG4gICAgZGF0YS5zdGF0dXMgPSBjYXBfY29sbGF0aW9uX3VzZXJfZnJvbnRfYWpheF9vYmplY3Quc3RhdHVzO1xuXG4gICAgY29uc3QgcCA9ICQuYWpheCAoe1xuICAgICAgICAndXJsJyAgOiBnZXRfYXBpX2VudHJ5cG9pbnQgKCkgKyB1cmwsXG4gICAgICAgICdkYXRhJyA6IGRhdGEsXG4gICAgfSk7XG4gICAgcmV0dXJuIHA7XG59XG5cbi8qKlxuICogQnVpbGQgYSB2YWxpZCBmaWxlbmFtZSB0byBzYXZlIHRoZSBjb25maWcuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0ciBUaGUgc3RyaW5nIHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBlbmNvZGVkIHN0cmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVJGQzU5ODdWYWx1ZUNoYXJzIChzdHIpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50IChzdHIpXG4gICAgLy8gTm90ZSB0aGF0IGFsdGhvdWdoIFJGQzM5ODYgcmVzZXJ2ZXMgJyEnLCBSRkM1OTg3IGRvZXMgbm90LFxuICAgIC8vIHNvIHdlIGRvIG5vdCBuZWVkIHRvIGVzY2FwZSBpdFxuICAgICAgICAucmVwbGFjZSAoL1snKCldL2csIGVzY2FwZSkgLy8gaS5lLiwgJTI3ICUyOCAlMjlcbiAgICAgICAgLnJlcGxhY2UgKC9cXCovZywgJyUyQScpXG4gICAgLy8gVGhlIGZvbGxvd2luZyBhcmUgbm90IHJlcXVpcmVkIGZvciBwZXJjZW50LWVuY29kaW5nIHBlciBSRkM1OTg3LFxuICAgIC8vIHNvIHdlIGNhbiBhbGxvdyBmb3IgYSBsaXR0bGUgYmV0dGVyIHJlYWRhYmlsaXR5IG92ZXIgdGhlIHdpcmU6IHxgXlxuICAgICAgICAucmVwbGFjZSAoLyUoPzo3Q3w2MHw1RSkvZywgdW5lc2NhcGUpO1xufVxuXG4vKipcbiAqIEEga2V5IHRoYXQgc29ydHMgbnVtYmVycyByaWdodFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzIEFueSBzdHJpbmcuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIGtleSBkZXJpdmVkIGZyb20gdGhlIHN0cmluZyB0aGF0IHNvcnRzIG51bWJlcnMgcmlnaHQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzb3J0X2tleSAocykge1xuICAgIGZ1bmN0aW9uIGZpeG51bSAobWF0Y2gsIGR1bW15X29mZnNldCwgZHVtbXlfc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBtYXRjaC5sZW5ndGgudG9TdHJpbmcgKCkgKyBtYXRjaDtcbiAgICB9XG4gICAgcyA9IHMucmVwbGFjZSAoL1xcZCsvLCBmaXhudW0pO1xuICAgIHJldHVybiBzO1xufVxuXG4vKipcbiAqIFByZXBhcmUgYSB3aXRuZXNzIGZvciBkaXNwbGF5LCBhZGQgaHVtYW4tcmVhZGFibGUgdGl0bGUsIGkxOG4uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHcgIFRoZSB3aXRuZXNzIHRvIGZpeFxuICogQHJldHVybnMge09iamVjdH0gIFRoZSBmaXhlZCB3aXRuZXNzIG9iamVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gZml4X3dpdG5lc3MgKHcpIHtcbiAgICBjb25zdCBpMThuID0gY2FwX2NvbGxhdGlvbl91c2VyX2Zyb250X2FqYXhfb2JqZWN0O1xuXG4gICAgLy8gYWRkIGNoZWNrIGZvciByZWFjdGl2aXR5XG4gICAgdy5jaGVja2VkICA9IGZhbHNlO1xuICAgIHcudGl0bGUgICAgPSB3LnNpZ2x1bTtcbiAgICB3LnRpdGxlICAgID0gdy50aXRsZS5yZXBsYWNlICgvIyhcXGQrKS8sICAgICAgIGkxOG4uY29weV9tc2cpO1xuICAgIHcudGl0bGUgICAgPSB3LnRpdGxlLnJlcGxhY2UgKC9bP11oYW5kcz1YWVovLCBpMThuLmNvcnJfbXNnKTtcbiAgICB3LnNvcnRfa2V5ID0gdy50aXRsZTtcbiAgICB3LnRpdGxlICAgID0gdy50aXRsZS5yZXBsYWNlICgvYmstdGV4dHpldWdlLywgaTE4bi5ia3R6X21zZyk7XG4gICAgdy5zb3J0X2tleSA9IHcuc29ydF9rZXkucmVwbGFjZSAoL2JrLXRleHR6ZXVnZS8sICdfYmstdGV4dHpldWdlJyk7IC8vIGFsd2F5cyBzb3J0IHRoaXMgZmlyc3RcbiAgICB3LnNvcnRfa2V5ID0gc29ydF9rZXkgKHcuc29ydF9rZXkpO1xuICAgIHJldHVybiB3O1xufVxuXG4vKipcbiAqIFBhcnNlIEFQSSBzZXJ2ZXIgcmVzcG9uc2UgaW50byB3aXRuZXNzIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByICBUaGUgc2VydmVyIHJlc3BvbnNlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSAgVGhlIHdpdG5lc3Mgc3RydWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZV93aXRuZXNzX3Jlc3BvbnNlIChyKSB7XG4gICAgbGV0IHNpZ2x1bSA9IHIubXNfaWQ7XG4gICAgaWYgKHIudHlwZSAhPT0gJ29yaWdpbmFsJykge1xuICAgICAgICBzaWdsdW0gKz0gJz9oYW5kcz1YWVonO1xuICAgIH1cbiAgICBpZiAoci5uID4gMSkge1xuICAgICAgICBzaWdsdW0gKz0gJyMnICsgci5uO1xuICAgIH1cblxuICAgIHJldHVybiBmaXhfd2l0bmVzcyAoe1xuICAgICAgICAnc2lnbHVtJyA6IHNpZ2x1bSxcbiAgICAgICAgJ3R5cGUnICAgOiByLnR5cGUsXG4gICAgfSk7XG59XG5cbi8qKlxuICogUGFyc2Ugd2l0bmVzcyBzaWdsdW0gaW50byB3aXRuZXNzIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzaWdsdW0gIFRoZSB3aXRuZXNzIHNpZ2x1bVxuICogQHJldHVybnMge09iamVjdH0gIFRoZSB3aXRuZXNzIG9iamVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Vfc2lnbHVtIChzaWdsdW0pIHtcbiAgICByZXR1cm4gZml4X3dpdG5lc3MgKHtcbiAgICAgICAgJ3NpZ2x1bScgOiBzaWdsdW0sXG4gICAgICAgICd0eXBlJyAgIDogc2lnbHVtLm1hdGNoICgvWz9daGFuZHM9WFlaLykgPyAnbGF0ZXJfaGFuZHMnIDogJ29yaWdpbmFsJyxcbiAgICB9KTtcbn1cblxuLyoqXG4gKiBVbnJvbGwgY29sbGF0ZSBzdHJ1Y3RcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSByb2xsZWQgIFRoZSBjb2xsYXRlIHN0cnVjdFxuICogQHJldHVybnMge0FycmF5fSAgVGhlIHVucm9sbGVkIHdpdG5lc3MgYXJyYXlcbiAqXG4gKiBUdXJucyB0aGlzOlxuICAgIFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJjb3JyZXNwXCI6IFwiQksuNDBfNFwiLFxuICAgICAgICAgICAgXCJ3aXRuZXNzZXNcIjogW1xuICAgICAgICAgICAgICAgIFwiYmstdGV4dHpldWdlXCIsXG4gICAgICAgICAgICAgICAgXCJ2YXRpa2FuLWJhdi1jaGlnaS1mLWl2LTc1XCJcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJjb3JyZXNwXCI6IFwiQksuMTM3XCIsXG4gICAgICAgICAgICBcIndpdG5lc3Nlc1wiOiBbXG4gICAgICAgICAgICAgICAgXCJiay10ZXh0emV1Z2VcIixcbiAgICAgICAgICAgICAgICBcImtvcGVuaGFnZW4ta2ItMTk0My00XCIsXG4gICAgICAgICAgICAgICAgXCJwYXJpcy1ibi1sYXQtMjcxOFwiXG4gICAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICBdXG4gKiBpbnRvIHRoaXM6XG4gKiBbXG4gKiAgICBcIkJLLjQwXzQvYmstdGV4dHpldWdlXCIsXG4gKiAgICBcIkJLLjQwXzQvdmF0aWthbi1iYXYtY2hpZ2ktZi1pdi03NVwiLFxuICogICAgXCJCSy4xMzcvYmstdGV4dHpldWdlXCIsXG4gKiAgICBcIkJLLjEzNy9rb3BlbmhhZ2VuLWtiLTE5NDMtNFwiLFxuICogICAgXCJCSy4xMzcvcGFyaXMtYm4tbGF0LTI3MThcIixcbiAqIF1cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gdW5yb2xsX3dpdG5lc3NlcyAocm9sbGVkKSB7XG4gICAgcmV0dXJuIFtdLmNvbmNhdCAoLi4uIHJvbGxlZC5tYXAgKGQgPT4gZC53aXRuZXNzZXMubWFwICh3ID0+IGAke2QuY29ycmVzcH0vJHt3fWApKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRfc2lnbGEgKGl0ZW0pIHtcbiAgICAvLyBHZXQgdGhlIHNpZ2xhIG9mIGFsbCB3aXRuZXNzZXMgdG8gY29sbGF0ZSBpbiB1c2VyLXNwZWNpZmllZCBvcmRlclxuICAgIHJldHVybiAkIChpdGVtKS5jbG9zZXN0ICgndGFibGUnKS5maW5kICgndHJbZGF0YS1zaWdsdW1dJykubWFwIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSAoJ2RhdGEtc2lnbHVtJyk7XG4gICAgfSlcbiAgICAgICAgLmdldCAoKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/tools.js\n");

/***/ })

/******/ });