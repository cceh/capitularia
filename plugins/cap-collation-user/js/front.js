/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/front.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!**************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzPzg4ZGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheVdpdGhIb2xlczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aG91dEhvbGVzLmpzPzQzMjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGlEQUFpRCxnQkFBZ0I7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRob3V0SG9sZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyMltpXSA9IGFycltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheVdpdGhvdXRIb2xlczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanM/YzZlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3I7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!***************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2l0ZXJhYmxlVG9BcnJheS5qcz84YjJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaXRlcmFibGVUb0FycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/iterableToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!********************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzPzhlYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QywrQkFBK0I7QUFDNUU7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaXRlcmFibGVUb0FycmF5TGltaXQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!***************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlUmVzdC5qcz8yNWNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfbm9uSXRlcmFibGVSZXN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlU3ByZWFkLmpzP2I5NmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlU3ByZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX25vbkl0ZXJhYmxlU3ByZWFkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/nonIterableSpread.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!*************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"../../node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"../../node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXkuanM/ZTA3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyxxRkFBa0I7O0FBRS9DLDJCQUEyQixtQkFBTyxDQUFDLGlHQUF3Qjs7QUFFM0Qsc0JBQXNCLG1CQUFPLENBQUMsdUZBQW1COztBQUVqRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheVdpdGhIb2xlcyA9IHJlcXVpcmUoXCIuL2FycmF5V2l0aEhvbGVzXCIpO1xuXG52YXIgaXRlcmFibGVUb0FycmF5TGltaXQgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdFwiKTtcblxudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdFwiKTtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NsaWNlZFRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!*****************************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ \"../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\");\n\nvar iterableToArray = __webpack_require__(/*! ./iterableToArray */ \"../../node_modules/@babel/runtime/helpers/iterableToArray.js\");\n\nvar nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ \"../../node_modules/@babel/runtime/helpers/nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5LmpzPzczNGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0JBQXdCLG1CQUFPLENBQUMsMkZBQXFCOztBQUVyRCxzQkFBc0IsbUJBQU8sQ0FBQyx1RkFBbUI7O0FBRWpELHdCQUF3QixtQkFBTyxDQUFDLDJGQUFxQjs7QUFFckQ7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aG91dEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRob3V0SG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlcIik7XG5cbnZhciBub25JdGVyYWJsZVNwcmVhZCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlU3ByZWFkXCIpO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3RvQ29uc3VtYWJsZUFycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/helpers/toConsumableArray.js\n");

/***/ }),

/***/ "../../node_modules/@babel/runtime/regenerator/index.js":
/*!*********************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/@babel/runtime/regenerator/index.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"../../node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvaGlnaGxhbmRlci91bmkvcHJqL2NhcGl0dWxhcmlhL2NhcGl0dWxhcmlhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcz9jMTc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDhFQUFxQiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "../../node_modules/regenerator-runtime/runtime.js":
/*!****************************************************************************************************!*\
  !*** /home/highlander/uni/prj/capitularia/capitularia/node_modules/regenerator-runtime/runtime.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./src/js/front.js":
/*!*************************!*\
  !*** ./src/js/front.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"../../node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tools */ \"./src/js/tools.js\");\n/* harmony import */ var results__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! results */ \"./src/js/results.js\");\n\n\n\n\n\n/*\n * We use webpack as a workaround to load javascript modules in Wordpress.\n * Wordpress cannot load javascript modules thru enqueue_script () because it\n * lacks an option to specify type=\"module\" on the <script> element.  Webpack\n * also packs babel-runtime for us.  babel-runtime is required for async\n * functions.\n */\n// TODO: webpack hot-reloading?\n\n(function ($) {\n  $(document).ready(function () {\n    /* The vue.js instance for the whole page. */\n    new Vue({\n      'el': '#vm-cap-collation-user',\n      'data': {\n        'bk': '',\n        'corresp': '',\n        'later_hands': false,\n        'witnesses': [],\n        // list of sigla (urls in the form: skara-brae-42?hands=XYZ#2)\n        'select_all': false,\n        'pre_select': null,\n        // list of witnesses to select after next ajax load\n        'bks': [],\n        // the list of bks shown in the dropdown\n        'corresps': [],\n        // the list of corresps shown in the dropdown\n        'advanced': false,\n        // don't show advanced options menu\n        'bk_id': tools__WEBPACK_IMPORTED_MODULE_3__[\"bk_id\"],\n        // make it known to the template\n        'spinner': false,\n        // if set true shows a spinner\n        'collating': false,\n        'algorithm': tools__WEBPACK_IMPORTED_MODULE_3__[\"cap_collation_algorithms\"][tools__WEBPACK_IMPORTED_MODULE_3__[\"cap_collation_algorithms\"].length - 1],\n        'levenshtein_distance': 0,\n        'levenshtein_ratio': 1.0,\n        'segmentation': false,\n        'joined': false,\n        // same as segmentation?\n        'transpositions': false,\n        'normalizations': '',\n        'algorithms': tools__WEBPACK_IMPORTED_MODULE_3__[\"cap_collation_algorithms\"],\n        'levenshtein_distances': [0, 1, 2, 3, 4, 5],\n        'levenshtein_ratios': [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\n      },\n      'computed': {\n        // list of shown sigla in correct order\n        'sigla': function sigla() {\n          return this.witnesses.map(function (w) {\n            return w.siglum;\n          });\n        },\n        // list of selected sigla in correct order\n        'selected': function selected() {\n          return this.witnesses.filter(function (w) {\n            return w.checked;\n          }).map(function (w) {\n            return w.siglum;\n          });\n        }\n      },\n      'methods': {\n        /**\n         * Bundle all parameters for collate () and on_save_config ().\n         */\n        ajax_params: function ajax_params() {\n          var data = _.pick(this.$data, 'bk', 'corresp', 'later_hands', 'levenshtein_distance', 'levenshtein_ratio', 'joined', 'segmentation', 'transpositions');\n\n          data.algorithm = this.algorithm.key;\n          data.normalizations = this.normalizations.split('\\n');\n          data.witnesses = this.selected;\n          return data;\n        },\n\n        /**\n         * Load the bk dropdown.  Called once during setup.\n         */\n        ajax_load_bks: function () {\n          var _ajax_load_bks = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n          /*#__PURE__*/\n          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n            var vm, response, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, r;\n\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    vm = this;\n                    _context.next = 3;\n                    return tools__WEBPACK_IMPORTED_MODULE_3__[\"api\"]('/data/capitularies.json/');\n\n                  case 3:\n                    response = _context.sent;\n                    // list of { cap_id, transcriptions }\n                    vm.bks = [];\n                    _iteratorNormalCompletion = true;\n                    _didIteratorError = false;\n                    _iteratorError = undefined;\n                    _context.prev = 8;\n\n                    for (_iterator = response[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                      r = _step.value;\n\n                      // Only include capitulars with at least 2\n                      // transcriptions so we have something to collate.  Only\n                      // include BK and Mordek.\n                      if (r.transcriptions >= 2 && r.cap_id.match(/^BK|^Mordek/)) {\n                        vm.bks.push(r.cap_id);\n                      }\n                    }\n\n                    _context.next = 16;\n                    break;\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](8);\n                    _didIteratorError = true;\n                    _iteratorError = _context.t0;\n\n                  case 16:\n                    _context.prev = 16;\n                    _context.prev = 17;\n\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                      _iterator.return();\n                    }\n\n                  case 19:\n                    _context.prev = 19;\n\n                    if (!_didIteratorError) {\n                      _context.next = 22;\n                      break;\n                    }\n\n                    throw _iteratorError;\n\n                  case 22:\n                    return _context.finish(19);\n\n                  case 23:\n                    return _context.finish(16);\n\n                  case 24:\n                    vm.bk = vm.bks[0] || '';\n                    _context.next = 27;\n                    return vm.ajax_load_corresps();\n\n                  case 27:\n                    _context.next = 29;\n                    return vm.load_witnesses_carry_selection();\n\n                  case 29:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[8, 12, 16, 24], [17,, 19, 23]]);\n          }));\n\n          function ajax_load_bks() {\n            return _ajax_load_bks.apply(this, arguments);\n          }\n\n          return ajax_load_bks;\n        }(),\n\n        /**\n         * Load the corresps dropdown.  Called if bk changes.\n         */\n        ajax_load_corresps: function () {\n          var _ajax_load_corresps = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n          /*#__PURE__*/\n          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2() {\n            var vm, response, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, r;\n\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    vm = this;\n                    _context2.next = 3;\n                    return tools__WEBPACK_IMPORTED_MODULE_3__[\"api\"](\"/data/capitulary/\".concat(vm.bk, \"/chapters.json/\"));\n\n                  case 3:\n                    response = _context2.sent;\n                    // list of { chapter, transcriptions }\n                    vm.corresps = [];\n                    _iteratorNormalCompletion2 = true;\n                    _didIteratorError2 = false;\n                    _iteratorError2 = undefined;\n                    _context2.prev = 8;\n\n                    for (_iterator2 = response[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                      r = _step2.value;\n\n                      // Only include chapters with at least 2 transcriptions\n                      // so we have something to collate.\n                      if (r.transcriptions >= 2) {\n                        vm.corresps.push(r.cap_id + (r.chapter ? \"_\".concat(r.chapter) : ''));\n                      }\n                    } // set a default corresp if corresp is not in corresps\n                    // in on_load_config () corresp will be set before corresps arrive\n\n\n                    _context2.next = 16;\n                    break;\n\n                  case 12:\n                    _context2.prev = 12;\n                    _context2.t0 = _context2[\"catch\"](8);\n                    _didIteratorError2 = true;\n                    _iteratorError2 = _context2.t0;\n\n                  case 16:\n                    _context2.prev = 16;\n                    _context2.prev = 17;\n\n                    if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                      _iterator2.return();\n                    }\n\n                  case 19:\n                    _context2.prev = 19;\n\n                    if (!_didIteratorError2) {\n                      _context2.next = 22;\n                      break;\n                    }\n\n                    throw _iteratorError2;\n\n                  case 22:\n                    return _context2.finish(19);\n\n                  case 23:\n                    return _context2.finish(16);\n\n                  case 24:\n                    if (!vm.corresps.includes(vm.corresp)) {\n                      vm.corresp = vm.corresps[0] || '';\n                    }\n\n                  case 25:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this, [[8, 12, 16, 24], [17,, 19, 23]]);\n          }));\n\n          function ajax_load_corresps() {\n            return _ajax_load_corresps.apply(this, arguments);\n          }\n\n          return ajax_load_corresps;\n        }(),\n\n        /**\n         * Load the witnesses table.  Called if corresps changes.\n         */\n        ajax_load_witnesses: function () {\n          var _ajax_load_witnesses = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n          /*#__PURE__*/\n          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3() {\n            var vm, response;\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    vm = this;\n                    vm.spinner = true;\n                    _context3.next = 4;\n                    return tools__WEBPACK_IMPORTED_MODULE_3__[\"api\"](\"/data/corresp/\".concat(vm.corresp, \"/manuscripts.json/\"));\n\n                  case 4:\n                    response = _context3.sent;\n                    // list of { ms_id, n, type }\n                    vm.spinner = false;\n                    vm.witnesses = response.map(tools__WEBPACK_IMPORTED_MODULE_3__[\"parse_witness_response\"]);\n                    vm.witnesses.sort(function (a, b) {\n                      return a.sort_key.localeCompare(b.sort_key);\n                    });\n\n                    if (!vm.later_hands) {\n                      vm.witnesses = vm.witnesses.filter(function (w) {\n                        return w.type === 'original';\n                      });\n                    }\n\n                  case 9:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          function ajax_load_witnesses() {\n            return _ajax_load_witnesses.apply(this, arguments);\n          }\n\n          return ajax_load_witnesses;\n        }(),\n\n        /**\n         * Reload the witnesses table while keeping selected items intact (if possible).\n         */\n        load_witnesses_carry_selection: function () {\n          var _load_witnesses_carry_selection = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n          /*#__PURE__*/\n          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee4() {\n            var vm, selected;\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    vm = this;\n                    selected = vm.selected.slice();\n                    _context4.next = 4;\n                    return vm.ajax_load_witnesses();\n\n                  case 4:\n                    vm.select_all = false;\n                    vm.check_all(false);\n                    vm.check_these(selected);\n\n                  case 7:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          function load_witnesses_carry_selection() {\n            return _load_witnesses_carry_selection.apply(this, arguments);\n          }\n\n          return load_witnesses_carry_selection;\n        }(),\n\n        /**\n         * Check or uncheck all witnesses.\n         */\n        check_all: function check_all(val) {\n          this.witnesses.map(function (w) {\n            w.checked = val;\n            return w;\n          });\n        },\n\n        /**\n         * Check all witnesses in list but don't uncheck any.\n         */\n        check_these: function check_these(sigla) {\n          this.witnesses.map(function (w) {\n            if (sigla.includes(w.siglum)) {\n              w.checked = true;\n            }\n\n            return w;\n          });\n        },\n\n        /**\n         * Sort the witnesses in the list to the top of the table.\n         *\n         * @param sigla   List of sigla of the witnesses\n         */\n        sort_like: function sort_like(sigla) {\n          var _vm$witnesses;\n\n          var vm = this;\n          var elems = [];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            var _loop = function _loop() {\n              var siglum = _step3.value;\n              var index = vm.witnesses.findIndex(function (e) {\n                return e.siglum === siglum;\n              });\n\n              if (index !== -1) {\n                // found\n                elems = elems.concat(vm.witnesses.splice(index, 1));\n              }\n            };\n\n            for (var _iterator3 = sigla[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              _loop();\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          (_vm$witnesses = vm.witnesses).unshift.apply(_vm$witnesses, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(elems));\n        },\n\n        /**\n         * The class(es) to apply to the witnesses table rows.\n         */\n        row_class: function row_class(dummy_w, dummy_index) {\n          return ['sortable'];\n        },\n\n        /*\n         * User Interface handlers\n         */\n        on_select_bk: function () {\n          var _on_select_bk = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n          /*#__PURE__*/\n          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee5(event) {\n            var vm;\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    // click on button in dropdown\n                    vm = this;\n                    vm.bk = event.target.getAttribute('data-bk');\n                    _context5.next = 4;\n                    return vm.ajax_load_corresps();\n\n                  case 4:\n                    _context5.next = 6;\n                    return vm.load_witnesses_carry_selection();\n\n                  case 6:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          function on_select_bk(_x) {\n            return _on_select_bk.apply(this, arguments);\n          }\n\n          return on_select_bk;\n        }(),\n        on_select_corresp: function on_select_corresp(event) {\n          // click on button in dropdown\n          this.corresp = event.target.getAttribute('data-corresp');\n          this.load_witnesses_carry_selection();\n        },\n        on_later_hands: function on_later_hands(event) {\n          // click on later hands checkbox\n          // much easier to implement this by hand than to figure out\n          // the vue.js timing of watched variables\n          this.later_hands = event.target.checked;\n          this.load_witnesses_carry_selection();\n        },\n        on_select_all: function on_select_all(event) {\n          // click on select all checkbox\n          // much easier to implement this by hand than to figure out\n          // the vue.js timing of watched variables\n          this.check_all(event.target.checked);\n        },\n        on_algorithm: function on_algorithm(event) {\n          // user selected algorithm\n          this.algorithm = this.algorithms[event.target.getAttribute('data-index')];\n        },\n        on_ld: function on_ld(event) {\n          this.levenshtein_distance = event.target.getAttribute('data-ld');\n        },\n        on_lr: function on_lr(event) {\n          this.levenshtein_ratio = event.target.getAttribute('data-lr');\n        },\n        on_reordered: function on_reordered(new_order) {\n          // the user reordered the witnesses in the results table\n          this.sort_like(new_order);\n          this.$refs.results.sort_like(new_order);\n        },\n        on_collate: function on_collate() {\n          // click on collate button\n          var vm = this;\n          vm.collating = true;\n          var p = this.$refs.results.collate(this.ajax_params());\n          p.always(function () {\n            vm.collating = false;\n          });\n        },\n\n        /**\n         * Load configuration from a user-local file.  Called from the\n         * file dialog ok button.\n         */\n        on_load_config: function on_load_config(event) {\n          var vm = this;\n          var file_input = event.target;\n          var files = file_input.files;\n\n          if (files.length === 1) {\n            var reader = new FileReader();\n\n            reader.onload =\n            /*#__PURE__*/\n            function () {\n              var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n              /*#__PURE__*/\n              _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee6(e) {\n                var json;\n                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        json = JSON.parse(e.target.result);\n                        vm.bk = json.bk;\n                        vm.corresp = json.corresp;\n                        vm.later_hands = json.later_hands;\n                        vm.segmentation = json.segmentation;\n                        vm.joined = json.joined || false;\n                        vm.transpositions = json.transpositions;\n                        $('#algorithm').val(json.algorithm);\n                        $('#levenshtein_distance').val(json.levenshtein_distance);\n                        $('#levenshtein_ratio').val(json.levenshtein_ratio);\n                        $('#normalizations').val(json.normalizations.join('\\n'));\n                        _context6.next = 13;\n                        return vm.ajax_load_corresps();\n\n                      case 13:\n                        _context6.next = 15;\n                        return vm.ajax_load_witnesses();\n\n                      case 15:\n                        vm.select_all = false;\n                        vm.check_all(false);\n                        vm.check_these(json.selected || []);\n                        vm.on_collate();\n\n                      case 19:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x2) {\n                return _ref.apply(this, arguments);\n              };\n            }();\n\n            reader.readAsText(files[0]);\n          }\n\n          file_input.value = null; // make it fire again even on the same file\n\n          return false; // don't submit form\n        },\n\n        /**\n         * Redirect click so we can use a normal bootstrap button.  The button\n         * type=file is not styleable.\n         */\n        on_load_config_redirect: function on_load_config_redirect()\n        /* event */\n        {\n          $('#load-config').click();\n        },\n\n        /**\n         * Save parameters to a user-local file.  Initialize a hidden <a> with a\n         * download link and fake a click on it.\n         */\n        on_save_config: function on_save_config() {\n          var params = this.ajax_params();\n          var url = 'data:text/plain,' + encodeURIComponent(JSON.stringify(params, null, 2));\n          var $e = $('#save-fake-download');\n          $e.attr({\n            'href': url,\n            'download': 'save-' + tools__WEBPACK_IMPORTED_MODULE_3__[\"encodeRFC5987ValueChars\"](params.corresp.toLowerCase()) + '.txt'\n          });\n          $e[0].click(); // trigger doesn't work\n        }\n      },\n      mounted: function mounted() {\n        this.ajax_load_bks();\n      },\n      updated: function updated() {\n        var vm = this;\n        var $tbody = $(vm.$el).find('table.witnesses tbody');\n        $tbody.disableSelection().sortable({\n          'items': 'tr.sortable',\n          'handle': 'th.handle',\n          'axis': 'y',\n          'cursor': 'move',\n          'containment': 'parent',\n          'update': function update()\n          /* event, ui */\n          {\n            var new_order = $tbody.find('tr[data-siglum]').map(function () {\n              return $(this).attr('data-siglum');\n            }).get();\n            vm.sort_like(new_order);\n            vm.$refs.results.sort_like(new_order);\n          }\n        });\n      }\n    });\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/front.js\n");

/***/ }),

/***/ "./src/js/results.js":
/*!***************************!*\
  !*** ./src/js/results.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"../../node_modules/@babel/runtime/helpers/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"../../node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tools */ \"./src/js/tools.js\");\n\n\n\n/* The vue.js instance for the collation output section. */\n\nVue.component('cap-collation-user-results', {\n  'data': function data() {\n    return {\n      'api': null,\n      // API server\n      'corresp': '',\n      'sigla': [],\n      'witnesses': [],\n      'unsorted_tables': [],\n      'tables': [],\n      'hovered': null,\n      // siglum of hovered witness\n      'spinner': false\n    };\n  },\n  'methods': {\n    collate: function collate(data) {\n      var vm = this;\n      vm.tables = [];\n      vm.corresp = data.corresp;\n      vm.spinner = true;\n      var p = $.ajax({\n        'url': vm.api,\n        'type': 'POST',\n        'data': JSON.stringify(data),\n        'contentType': 'application/json; charset=utf-8'\n      });\n      p.done(function () {\n        vm.update_tables(p.responseJSON.witnesses, p.responseJSON.table);\n        vm.sort_like(data.witnesses);\n      }).always(function () {\n        vm.spinner = false;\n      });\n      return p;\n    },\n\n    /**\n     * Transpose a table returned by CollateX\n     *\n     * Turn rows into columns and vice versa.\n     *\n     * @param array matrix The CollateX table\n     *\n     * @return array\n     */\n    transpose: function transpose(matrix) {\n      var _ref;\n\n      return (_ref = _).zip.apply(_ref, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(matrix));\n    },\n\n    /**\n     * Calculate the cell width in characters\n     *\n     * @param array $cell The array of tokens in the cell\n     *\n     * @return integer The width in characters\n     */\n    cell_width: function cell_width(cell) {\n      var tokens = cell.map(function (token) {\n        return token.t.trim();\n      });\n      return tokens.join(' ').length;\n    },\n\n    /**\n     * Split a table in columns every n characters\n     *\n     * @param array   $in_table  The table to split\n     * @param integer $max_width Split after this many characters\n     *\n     * @return array An array of tables\n     */\n    split_table: function split_table(table, max_width) {\n      var _this = this;\n\n      var out_tables = [];\n      var tmp_table = [];\n      var width = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = table[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var column = _step.value;\n          var column_width = 2 + Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(column.map(function (cell) {\n            return _this.cell_width(cell);\n          })));\n\n          if (width + column_width > max_width) {\n            // start a new table\n            out_tables.push(tmp_table.slice());\n            tmp_table = [];\n            width = 0;\n          }\n\n          tmp_table.push(column);\n          width += column_width;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (tmp_table.length > 0) {\n        out_tables.push(tmp_table);\n      }\n\n      return out_tables;\n    },\n\n    /**\n     * Format a CollateX table into HTML\n     *\n     * @param string[] sigla The witnesses' sigla in table order\n     * @param array    table The collation table in column-major orientation\n     * @param string[] order The witnesses' sigla in the order they should be displayed\n     *\n     * @return string[] The rows of the formatted table\n     *\n     * @return void\n     *\n     * The Collate-X response:\n     *\n     * {\n     *   \"witnesses\":[\"A\",\"B\"],\n     *   \"table\":[\n     *     [ [ {\"t\":\"A\",\"ref\":123 } ],      [ {\"t\":\"A\" } ] ],\n     *     [ [ {\"t\":\"black\",\"adj\":true } ], [ {\"t\":\"white\",\"adj\":true } ] ],\n     *     [ [ {\"t\":\"cat\",\"id\":\"xyz\" } ],   [ {\"t\":\"kitten.\",\"n\":\"cat\" } ] ]\n     *   ]\n     * }\n     */\n    format_table: function format_table(witnesses, table, order) {\n      if (order.length === 0) {\n        return [];\n      }\n\n      var sigla = witnesses.map(function (ms) {\n        return ms.siglum;\n      });\n      var titles = witnesses.map(function (ms) {\n        return ms.title;\n      });\n      var out_table = {\n        'class': '',\n        'rows': []\n      };\n      var is_master = true; // first witness will become the master text\n\n      var master_text = null; // ouput the witnesses in the correct order\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = order[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var siglum = _step2.value;\n          var index = sigla.indexOf(siglum);\n\n          if (index === -1) {\n            continue; // user messed with mss. list but didn't start another collation\n          }\n\n          var row = {\n            'siglum': siglum,\n            'title': titles[index],\n            'class': '',\n            'cells': []\n          };\n\n          if (master_text === null) {\n            master_text = table[index];\n          }\n\n          var ms_text = table[index];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _.zip(ms_text, master_text)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var _step3$value = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_step3.value, 2),\n                  ms_set = _step3$value[0],\n                  master_set = _step3$value[1];\n\n              var class_ = 'tokens';\n              var master = master_set.map(function (token) {\n                return token.t;\n              }).join(' ').trim();\n              var text = ms_set.map(function (token) {\n                return token.t;\n              }).join(' ').trim();\n\n              if (!is_master && master.toLowerCase() === text.toLowerCase()) {\n                class_ += ' equal';\n              }\n\n              if (text === '') {\n                class_ += ' missing';\n              }\n\n              row.cells.push({\n                'class': class_,\n                'text': text\n              });\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          out_table.rows.push(row);\n          is_master = false;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return out_table;\n    },\n    update_tables: function update_tables(witnesses, table) {\n      var _this2 = this;\n\n      this.witnesses = witnesses.map(tools__WEBPACK_IMPORTED_MODULE_2__[\"parse_siglum\"]);\n      var max_width = 120 - Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(this.witnesses.map(function (ms) {\n        return ms.title.length;\n      })));\n      this.unsorted_tables = this.split_table(table, max_width).map(function (table) {\n        return _this2.transpose(table);\n      });\n    },\n    sort_like: function sort_like(order) {\n      var _this3 = this;\n\n      this.tables = this.unsorted_tables.map(function (table) {\n        return _this3.format_table(_this3.witnesses, table, order);\n      });\n\n      if (this.tables.length > 0) {\n        this.tables[0].class = 'first';\n        this.tables[this.tables.length - 1].class = 'last';\n      }\n    },\n    get_sigla: function get_sigla(item) {\n      // Get the sigla of all witnesses to collate in user-specified order\n      return $(item).closest('table').find('tr[data-siglum]').map(function () {\n        return this.getAttribute('data-siglum');\n      }).get();\n    },\n    row_class: function row_class(row, dummy_index) {\n      var cls = [];\n      cls.push('sortable');\n\n      if (this.hovered === row.siglum) {\n        cls.push('highlight-witness');\n      }\n\n      return cls;\n    }\n  },\n  mounted: function mounted() {\n    this.api = tools__WEBPACK_IMPORTED_MODULE_2__[\"get_api_entrypoint\"]() + '/collatex/collate';\n  },\n  updated: function updated() {\n    var vm = this;\n    var $tbodies = $(this.$el).find('table.collation tbody');\n    $tbodies.disableSelection().sortable({\n      'items': 'tr.sortable',\n      'handle': 'th.handle',\n      'axis': 'y',\n      'cursor': 'move',\n      'containment': 'parent',\n      'update': function update(event, ui) {\n        vm.$emit('reordered', vm.get_sigla(ui.item));\n      }\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/results.js\n");

/***/ }),

/***/ "./src/js/tools.js":
/*!*************************!*\
  !*** ./src/js/tools.js ***!
  \*************************/
/*! exports provided: bk_id, cap_collation_algorithms, api, get_api_entrypoint, encodeRFC5987ValueChars, sort_key, fix_witness, parse_witness_response, parse_siglum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bk_id\", function() { return bk_id; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cap_collation_algorithms\", function() { return cap_collation_algorithms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"api\", function() { return api; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_api_entrypoint\", function() { return get_api_entrypoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeRFC5987ValueChars\", function() { return encodeRFC5987ValueChars; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort_key\", function() { return sort_key; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fix_witness\", function() { return fix_witness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_witness_response\", function() { return parse_witness_response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_siglum\", function() { return parse_siglum; });\n/** cap_collation_user_front_ajax_object is set by wp_localize_script in function.php. */\n\n/* global cap_collation_user_front_ajax_object */\n\n/** The id of the \"Obertext\". */\nvar bk_id = 'bk-textzeuge';\n/**\n * The collation algorithms we support.  The Needleman-Wunsch-Gotoh algorithm\n * is available only with our special patched version of CollateX.\n */\n\nvar cap_collation_algorithms = [{\n  'key': 'dekker',\n  'name': 'Dekker'\n}, {\n  'key': 'gst',\n  'name': 'Greedy String Tiling'\n}, {\n  'key': 'medite',\n  'name': 'MEDITE'\n}, {\n  'key': 'needleman-wunsch',\n  'name': 'Needleman-Wunsch'\n}, {\n  'key': 'needleman-wunsch-gotoh',\n  'name': 'Needleman-Wunsch-Gotoh'\n}];\n/**\n * This calls the API on the API server\n */\n\nfunction api(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  data.status = cap_collation_user_front_ajax_object.status;\n  var p = $.ajax({\n    'url': get_api_entrypoint() + url,\n    'data': data\n  });\n  return p;\n}\n/**\n * Get the API entrypoint\n */\n\nfunction get_api_entrypoint() {\n  return cap_collation_user_front_ajax_object.api_url;\n}\n/**\n * Build a valid filename to save the config.\n */\n\nfunction encodeRFC5987ValueChars(str) {\n  return encodeURIComponent(str) // Note that although RFC3986 reserves '!', RFC5987 does not,\n  // so we do not need to escape it\n  .replace(/['()]/g, escape) // i.e., %27 %28 %29\n  .replace(/\\*/g, '%2A') // The following are not required for percent-encoding per RFC5987,\n  // so we can allow for a little better readability over the wire: |`^\n  .replace(/%(?:7C|60|5E)/g, unescape);\n}\n/**\n * A key that sorts numbers right\n */\n\nfunction sort_key(s) {\n  function fixnum(match, offset, string) {\n    return match.length.toString() + match;\n  }\n\n  s = s.replace(/\\d+/, fixnum);\n  s = s.replace(/bk-textzeuge/, '_bk-textzeuge'); // always sort this first\n\n  return s;\n}\n/**\n * Fix witness\n */\n\nfunction fix_witness(w) {\n  var i18n = cap_collation_user_front_ajax_object; // add check for reactivity\n\n  w.checked = false;\n  w.title = w.siglum;\n  w.title = w.title.replace(/bk-textzeuge/, i18n.bktz_msg);\n  w.title = w.title.replace(/#(\\d+)/, i18n.copy_msg);\n  w.title = w.title.replace(/[?]hands=XYZ/, i18n.corr_msg);\n  w.sort_key = sort_key(w.title);\n  return w;\n}\n/**\n * Parse API response into separate pieces of data\n */\n\nfunction parse_witness_response(r) {\n  var siglum = r.ms_id;\n\n  if (r.type != 'original') {\n    siglum += '?hands=XYZ';\n  }\n\n  if (r.n > 1) {\n    siglum += '#' + r.n;\n  }\n\n  return fix_witness({\n    'siglum': siglum,\n    'type': r.type\n  });\n}\n/**\n * Parse witness siglum into separate pieces of data\n */\n\nfunction parse_siglum(wit) {\n  return fix_witness({\n    'siglum': wit,\n    'type': wit.match(/[?]hands=XYZ/) ? 'later_hands' : 'original'\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdG9vbHMuanM/NmE3OSJdLCJuYW1lcyI6WyJia19pZCIsImNhcF9jb2xsYXRpb25fYWxnb3JpdGhtcyIsImFwaSIsInVybCIsImRhdGEiLCJzdGF0dXMiLCJjYXBfY29sbGF0aW9uX3VzZXJfZnJvbnRfYWpheF9vYmplY3QiLCJwIiwiJCIsImFqYXgiLCJnZXRfYXBpX2VudHJ5cG9pbnQiLCJhcGlfdXJsIiwiZW5jb2RlUkZDNTk4N1ZhbHVlQ2hhcnMiLCJzdHIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiZXNjYXBlIiwidW5lc2NhcGUiLCJzb3J0X2tleSIsInMiLCJmaXhudW0iLCJtYXRjaCIsIm9mZnNldCIsInN0cmluZyIsImxlbmd0aCIsInRvU3RyaW5nIiwiZml4X3dpdG5lc3MiLCJ3IiwiaTE4biIsImNoZWNrZWQiLCJ0aXRsZSIsInNpZ2x1bSIsImJrdHpfbXNnIiwiY29weV9tc2ciLCJjb3JyX21zZyIsInBhcnNlX3dpdG5lc3NfcmVzcG9uc2UiLCJyIiwibXNfaWQiLCJ0eXBlIiwibiIsInBhcnNlX3NpZ2x1bSIsIndpdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFFQTtBQUNPLElBQU1BLEtBQUssR0FBRyxjQUFkO0FBRVA7Ozs7O0FBSU8sSUFBTUMsd0JBQXdCLEdBQUcsQ0FDcEM7QUFBRSxTQUFRLFFBQVY7QUFBb0MsVUFBUztBQUE3QyxDQURvQyxFQUVwQztBQUFFLFNBQVEsS0FBVjtBQUFvQyxVQUFTO0FBQTdDLENBRm9DLEVBR3BDO0FBQUUsU0FBUSxRQUFWO0FBQW9DLFVBQVM7QUFBN0MsQ0FIb0MsRUFJcEM7QUFBRSxTQUFRLGtCQUFWO0FBQW9DLFVBQVM7QUFBN0MsQ0FKb0MsRUFLcEM7QUFBRSxTQUFRLHdCQUFWO0FBQW9DLFVBQVM7QUFBN0MsQ0FMb0MsQ0FBakM7QUFRUDs7OztBQUdPLFNBQVNDLEdBQVQsQ0FBY0MsR0FBZCxFQUE4QjtBQUFBLE1BQVhDLElBQVcsdUVBQUosRUFBSTtBQUNqQ0EsTUFBSSxDQUFDQyxNQUFMLEdBQWNDLG9DQUFvQyxDQUFDRCxNQUFuRDtBQUVBLE1BQU1FLENBQUMsR0FBR0MsQ0FBQyxDQUFDQyxJQUFGLENBQVE7QUFDZCxXQUFTQyxrQkFBa0IsS0FBTVAsR0FEbkI7QUFFZCxZQUFTQztBQUZLLEdBQVIsQ0FBVjtBQUlBLFNBQU9HLENBQVA7QUFDSDtBQUVEOzs7O0FBR08sU0FBU0csa0JBQVQsR0FBK0I7QUFDbEMsU0FBT0osb0NBQW9DLENBQUNLLE9BQTVDO0FBQ0g7QUFFRDs7OztBQUdPLFNBQVNDLHVCQUFULENBQWtDQyxHQUFsQyxFQUF1QztBQUMxQyxTQUFPQyxrQkFBa0IsQ0FBRUQsR0FBRixDQUFsQixDQUNQO0FBQ0E7QUFGTyxHQUdGRSxPQUhFLENBR08sUUFIUCxFQUdpQkMsTUFIakIsRUFHeUI7QUFIekIsR0FJRkQsT0FKRSxDQUlPLEtBSlAsRUFJYyxLQUpkLEVBS1A7QUFDQTtBQU5PLEdBT0ZBLE9BUEUsQ0FPTyxnQkFQUCxFQU95QkUsUUFQekIsQ0FBUDtBQVFIO0FBRUQ7Ozs7QUFHTyxTQUFTQyxRQUFULENBQW1CQyxDQUFuQixFQUFzQjtBQUN6QixXQUFTQyxNQUFULENBQWlCQyxLQUFqQixFQUF3QkMsTUFBeEIsRUFBZ0NDLE1BQWhDLEVBQXdDO0FBQ3BDLFdBQU9GLEtBQUssQ0FBQ0csTUFBTixDQUFhQyxRQUFiLEtBQTJCSixLQUFsQztBQUNIOztBQUNERixHQUFDLEdBQUdBLENBQUMsQ0FBQ0osT0FBRixDQUFXLEtBQVgsRUFBa0JLLE1BQWxCLENBQUo7QUFDQUQsR0FBQyxHQUFHQSxDQUFDLENBQUNKLE9BQUYsQ0FBVyxjQUFYLEVBQTJCLGVBQTNCLENBQUosQ0FMeUIsQ0FLd0I7O0FBQ2pELFNBQU9JLENBQVA7QUFDSDtBQUVEOzs7O0FBR08sU0FBU08sV0FBVCxDQUFzQkMsQ0FBdEIsRUFBeUI7QUFDNUIsTUFBTUMsSUFBSSxHQUFHdEIsb0NBQWIsQ0FENEIsQ0FHNUI7O0FBQ0FxQixHQUFDLENBQUNFLE9BQUYsR0FBYSxLQUFiO0FBQ0FGLEdBQUMsQ0FBQ0csS0FBRixHQUFhSCxDQUFDLENBQUNJLE1BQWY7QUFDQUosR0FBQyxDQUFDRyxLQUFGLEdBQWFILENBQUMsQ0FBQ0csS0FBRixDQUFRZixPQUFSLENBQWlCLGNBQWpCLEVBQWlDYSxJQUFJLENBQUNJLFFBQXRDLENBQWI7QUFDQUwsR0FBQyxDQUFDRyxLQUFGLEdBQWFILENBQUMsQ0FBQ0csS0FBRixDQUFRZixPQUFSLENBQWlCLFFBQWpCLEVBQWlDYSxJQUFJLENBQUNLLFFBQXRDLENBQWI7QUFDQU4sR0FBQyxDQUFDRyxLQUFGLEdBQWFILENBQUMsQ0FBQ0csS0FBRixDQUFRZixPQUFSLENBQWlCLGNBQWpCLEVBQWlDYSxJQUFJLENBQUNNLFFBQXRDLENBQWI7QUFDQVAsR0FBQyxDQUFDVCxRQUFGLEdBQWFBLFFBQVEsQ0FBRVMsQ0FBQyxDQUFDRyxLQUFKLENBQXJCO0FBQ0EsU0FBT0gsQ0FBUDtBQUNIO0FBRUQ7Ozs7QUFHTyxTQUFTUSxzQkFBVCxDQUFpQ0MsQ0FBakMsRUFBb0M7QUFDdkMsTUFBSUwsTUFBTSxHQUFHSyxDQUFDLENBQUNDLEtBQWY7O0FBQ0EsTUFBSUQsQ0FBQyxDQUFDRSxJQUFGLElBQVUsVUFBZCxFQUEwQjtBQUN0QlAsVUFBTSxJQUFJLFlBQVY7QUFDSDs7QUFDRCxNQUFJSyxDQUFDLENBQUNHLENBQUYsR0FBTSxDQUFWLEVBQWE7QUFDVFIsVUFBTSxJQUFJLE1BQU1LLENBQUMsQ0FBQ0csQ0FBbEI7QUFDSDs7QUFFRCxTQUFPYixXQUFXLENBQUU7QUFDaEIsY0FBYUssTUFERztBQUVoQixZQUFhSyxDQUFDLENBQUNFO0FBRkMsR0FBRixDQUFsQjtBQUlIO0FBR0Q7Ozs7QUFHTyxTQUFTRSxZQUFULENBQXVCQyxHQUF2QixFQUE0QjtBQUMvQixTQUFPZixXQUFXLENBQUU7QUFDaEIsY0FBYWUsR0FERztBQUVoQixZQUFhQSxHQUFHLENBQUNwQixLQUFKLENBQVcsY0FBWCxJQUE2QixhQUE3QixHQUE2QztBQUYxQyxHQUFGLENBQWxCO0FBSUgiLCJmaWxlIjoiLi9zcmMvanMvdG9vbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogY2FwX2NvbGxhdGlvbl91c2VyX2Zyb250X2FqYXhfb2JqZWN0IGlzIHNldCBieSB3cF9sb2NhbGl6ZV9zY3JpcHQgaW4gZnVuY3Rpb24ucGhwLiAqL1xuLyogZ2xvYmFsIGNhcF9jb2xsYXRpb25fdXNlcl9mcm9udF9hamF4X29iamVjdCAqL1xuXG4vKiogVGhlIGlkIG9mIHRoZSBcIk9iZXJ0ZXh0XCIuICovXG5leHBvcnQgY29uc3QgYmtfaWQgPSAnYmstdGV4dHpldWdlJztcblxuLyoqXG4gKiBUaGUgY29sbGF0aW9uIGFsZ29yaXRobXMgd2Ugc3VwcG9ydC4gIFRoZSBOZWVkbGVtYW4tV3Vuc2NoLUdvdG9oIGFsZ29yaXRobVxuICogaXMgYXZhaWxhYmxlIG9ubHkgd2l0aCBvdXIgc3BlY2lhbCBwYXRjaGVkIHZlcnNpb24gb2YgQ29sbGF0ZVguXG4gKi9cbmV4cG9ydCBjb25zdCBjYXBfY29sbGF0aW9uX2FsZ29yaXRobXMgPSBbXG4gICAgeyAna2V5JyA6ICdkZWtrZXInLCAgICAgICAgICAgICAgICAgJ25hbWUnIDogJ0Rla2tlcicgfSxcbiAgICB7ICdrZXknIDogJ2dzdCcsICAgICAgICAgICAgICAgICAgICAnbmFtZScgOiAnR3JlZWR5IFN0cmluZyBUaWxpbmcnIH0sXG4gICAgeyAna2V5JyA6ICdtZWRpdGUnLCAgICAgICAgICAgICAgICAgJ25hbWUnIDogJ01FRElURScgfSxcbiAgICB7ICdrZXknIDogJ25lZWRsZW1hbi13dW5zY2gnLCAgICAgICAnbmFtZScgOiAnTmVlZGxlbWFuLVd1bnNjaCcgfSxcbiAgICB7ICdrZXknIDogJ25lZWRsZW1hbi13dW5zY2gtZ290b2gnLCAnbmFtZScgOiAnTmVlZGxlbWFuLVd1bnNjaC1Hb3RvaCcgfSxcbl07XG5cbi8qKlxuICogVGhpcyBjYWxscyB0aGUgQVBJIG9uIHRoZSBBUEkgc2VydmVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcGkgKHVybCwgZGF0YSA9IHt9KSB7XG4gICAgZGF0YS5zdGF0dXMgPSBjYXBfY29sbGF0aW9uX3VzZXJfZnJvbnRfYWpheF9vYmplY3Quc3RhdHVzO1xuXG4gICAgY29uc3QgcCA9ICQuYWpheCAoe1xuICAgICAgICAndXJsJyAgOiBnZXRfYXBpX2VudHJ5cG9pbnQgKCkgKyB1cmwsXG4gICAgICAgICdkYXRhJyA6IGRhdGEsXG4gICAgfSk7XG4gICAgcmV0dXJuIHA7XG59XG5cbi8qKlxuICogR2V0IHRoZSBBUEkgZW50cnlwb2ludFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2FwaV9lbnRyeXBvaW50ICgpIHtcbiAgICByZXR1cm4gY2FwX2NvbGxhdGlvbl91c2VyX2Zyb250X2FqYXhfb2JqZWN0LmFwaV91cmw7XG59XG5cbi8qKlxuICogQnVpbGQgYSB2YWxpZCBmaWxlbmFtZSB0byBzYXZlIHRoZSBjb25maWcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVSRkM1OTg3VmFsdWVDaGFycyAoc3RyKSB7XG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCAoc3RyKVxuICAgIC8vIE5vdGUgdGhhdCBhbHRob3VnaCBSRkMzOTg2IHJlc2VydmVzICchJywgUkZDNTk4NyBkb2VzIG5vdCxcbiAgICAvLyBzbyB3ZSBkbyBub3QgbmVlZCB0byBlc2NhcGUgaXRcbiAgICAgICAgLnJlcGxhY2UgKC9bJygpXS9nLCBlc2NhcGUpIC8vIGkuZS4sICUyNyAlMjggJTI5XG4gICAgICAgIC5yZXBsYWNlICgvXFwqL2csICclMkEnKVxuICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlIG5vdCByZXF1aXJlZCBmb3IgcGVyY2VudC1lbmNvZGluZyBwZXIgUkZDNTk4NyxcbiAgICAvLyBzbyB3ZSBjYW4gYWxsb3cgZm9yIGEgbGl0dGxlIGJldHRlciByZWFkYWJpbGl0eSBvdmVyIHRoZSB3aXJlOiB8YF5cbiAgICAgICAgLnJlcGxhY2UgKC8lKD86N0N8NjB8NUUpL2csIHVuZXNjYXBlKTtcbn1cblxuLyoqXG4gKiBBIGtleSB0aGF0IHNvcnRzIG51bWJlcnMgcmlnaHRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNvcnRfa2V5IChzKSB7XG4gICAgZnVuY3Rpb24gZml4bnVtIChtYXRjaCwgb2Zmc2V0LCBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoLmxlbmd0aC50b1N0cmluZyAoKSArIG1hdGNoO1xuICAgIH1cbiAgICBzID0gcy5yZXBsYWNlICgvXFxkKy8sIGZpeG51bSk7XG4gICAgcyA9IHMucmVwbGFjZSAoL2JrLXRleHR6ZXVnZS8sICdfYmstdGV4dHpldWdlJyk7IC8vIGFsd2F5cyBzb3J0IHRoaXMgZmlyc3RcbiAgICByZXR1cm4gcztcbn1cblxuLyoqXG4gKiBGaXggd2l0bmVzc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZml4X3dpdG5lc3MgKHcpIHtcbiAgICBjb25zdCBpMThuID0gY2FwX2NvbGxhdGlvbl91c2VyX2Zyb250X2FqYXhfb2JqZWN0O1xuXG4gICAgLy8gYWRkIGNoZWNrIGZvciByZWFjdGl2aXR5XG4gICAgdy5jaGVja2VkICA9IGZhbHNlO1xuICAgIHcudGl0bGUgICAgPSB3LnNpZ2x1bTtcbiAgICB3LnRpdGxlICAgID0gdy50aXRsZS5yZXBsYWNlICgvYmstdGV4dHpldWdlLywgaTE4bi5ia3R6X21zZyk7XG4gICAgdy50aXRsZSAgICA9IHcudGl0bGUucmVwbGFjZSAoLyMoXFxkKykvLCAgICAgICBpMThuLmNvcHlfbXNnKTtcbiAgICB3LnRpdGxlICAgID0gdy50aXRsZS5yZXBsYWNlICgvWz9daGFuZHM9WFlaLywgaTE4bi5jb3JyX21zZyk7XG4gICAgdy5zb3J0X2tleSA9IHNvcnRfa2V5ICh3LnRpdGxlKTtcbiAgICByZXR1cm4gdztcbn1cblxuLyoqXG4gKiBQYXJzZSBBUEkgcmVzcG9uc2UgaW50byBzZXBhcmF0ZSBwaWVjZXMgb2YgZGF0YVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Vfd2l0bmVzc19yZXNwb25zZSAocikge1xuICAgIGxldCBzaWdsdW0gPSByLm1zX2lkO1xuICAgIGlmIChyLnR5cGUgIT0gJ29yaWdpbmFsJykge1xuICAgICAgICBzaWdsdW0gKz0gJz9oYW5kcz1YWVonO1xuICAgIH1cbiAgICBpZiAoci5uID4gMSkge1xuICAgICAgICBzaWdsdW0gKz0gJyMnICsgci5uO1xuICAgIH1cblxuICAgIHJldHVybiBmaXhfd2l0bmVzcyAoe1xuICAgICAgICAnc2lnbHVtJyAgIDogc2lnbHVtLFxuICAgICAgICAndHlwZScgICAgIDogci50eXBlLFxuICAgIH0pO1xufVxuXG5cbi8qKlxuICogUGFyc2Ugd2l0bmVzcyBzaWdsdW0gaW50byBzZXBhcmF0ZSBwaWVjZXMgb2YgZGF0YVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Vfc2lnbHVtICh3aXQpIHtcbiAgICByZXR1cm4gZml4X3dpdG5lc3MgKHtcbiAgICAgICAgJ3NpZ2x1bScgICA6IHdpdCxcbiAgICAgICAgJ3R5cGUnICAgICA6IHdpdC5tYXRjaCAoL1s/XWhhbmRzPVhZWi8pID8gJ2xhdGVyX2hhbmRzJyA6ICdvcmlnaW5hbCcsXG4gICAgfSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/tools.js\n");

/***/ })

/******/ });