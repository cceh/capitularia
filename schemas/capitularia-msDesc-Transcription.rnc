namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2018-05-01T12:28:17Z. .
# TEI Edition: Version 3.2.0. Last updated on
#	10th July 2017, revision 0fcf651
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.2.0/
#

# Die Inhalte sind frei zugänglich und nicht-kommerziell (CC BY-SA-Lizenz). Einige Digitalisate und Texte sind aus rechtlichen Gründen jedoch Mitarbeitern vorbehalten. Content is freely available on a non-commercial basis (CC BY-SA license). Some digital images and texts are only available to staff due to copyright issues.
macro.paraContent =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.global
   | model.lLike)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
data.numeric =
  xsd:double
  | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
  | xsd:decimal
anyElement-xenoData =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement-xenoData)*
  }
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { xsd:double }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.written.attributes = att.written.attribute.hand
att.written.attribute.hand =
  
  ## points to a handNote element describing the hand considered responsible for the textual content of the element concerned.
  attribute hand { xsd:anyURI }?
att.breaking.attributes = att.breaking.attribute.break
att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.calendar,
  att.datable.attribute.period
att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.datable-calendar-calendar-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attribute.period =
  
  ## supplies a pointer to some location defining a named period of time within which the datable item is understood to have occurred.
  attribute period { xsd:anyURI }?
att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { xsd:anyURI+ }
  }?
att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { xsd:anyURI+ }
  }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list { xsd:anyURI+ }
  }?
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.global.rendition.attributes =
  att.global.rendition.attribute.rend,
  att.global.rendition.attribute.style,
  att.global.rendition.attribute.rendition
att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
att.global.source.attributes = att.global.source.attribute.source
att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list { xsd:anyURI+ }
  }?
att.global.attributes =
  att.global.rendition.attributes,
  att.global.linking.attributes,
  att.global.analytic.attributes,
  att.global.facs.attributes,
  att.global.change.attributes,
  att.global.responsibility.attributes,
  att.global.source.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.xmlbase,
  att.global.attribute.xmlspace
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base { xsd:anyURI }?
att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.scribeRef,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.scriptRef,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { xsd:anyURI+ }
  }?
att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { xsd:anyURI+ }
  }?
att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { xsd:anyURI }
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
att.notated.attributes = att.notated.attribute.notation
att.notated.attribute.notation =
  
  ## names the notation used for the content of the element.
  attribute notation {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.typed-subtypeTyped-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.pointing-targetLang-targetLang-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo { xsd:anyURI }?
sch:pattern [
  id =
    "capitularia-msDesc-Transcription-att.spanning-spanTo-spanTo-2-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.timed.attributes =
  att.timed.attribute.start, att.timed.attribute.end
att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start { xsd:anyURI }?
att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end { xsd:anyURI }?
att.citing.attributes =
  att.citing.attribute.unit,
  att.citing.attribute.from,
  att.citing.attribute.to
att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry.
  ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column; 8] entry
  attribute unit {
    
    ## the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies an entry number or label in a list of entries.
      "column"
    | 
      ## the element identifies a column.
      "entry"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.citing.attribute.from =
  
  ## specifies the starting point of the range of units indicated by the unit attribute.
  attribute from {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.citing.attribute.to =
  
  ## specifies the end-point of the range of units indicated by the unit attribute.
  attribute to {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
model.nameLike.agent = orgName | persName
model.nameLike.agent_alternation = orgName | persName
model.nameLike.agent_sequence = orgName, persName
model.nameLike.agent_sequenceOptional = orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = orgName*, persName*
model.nameLike.agent_sequenceRepeatable = orgName+, persName+
model.segLike = seg
model.hiLike = hi
model.hiLike_alternation = hi
model.hiLike_sequence = hi
model.hiLike_sequenceOptional = hi?
model.hiLike_sequenceOptionalRepeatable = hi*
model.hiLike_sequenceRepeatable = hi+
model.emphLike = mentioned | title
model.emphLike_alternation = mentioned | title
model.emphLike_sequence = mentioned, title
model.emphLike_sequenceOptional = mentioned?, title?
model.emphLike_sequenceOptionalRepeatable = mentioned*, title*
model.emphLike_sequenceRepeatable = mentioned+, title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.dimLike = height | width
model.measureLike = num | height | width
model.measureLike_alternation = num | height | width
model.measureLike_sequence = num, height, width
model.measureLike_sequenceOptional = num?, height?, width?
model.measureLike_sequenceOptionalRepeatable = num*, height*, width*
model.measureLike_sequenceRepeatable = num+, height+, width+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = graphic | formula
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc =
  catchwords
  | dimensions
  | locus
  | locusGrp
  | material
  | origDate
  | origPlace
  | watermark
model.pPart.editorial = choice | abbr | expan | subst
model.pPart.editorial_alternation = choice | abbr | expan | subst
model.pPart.editorial_sequence = choice, abbr, expan, subst
model.pPart.editorial_sequenceOptional = choice?, abbr?, expan?, subst?
model.pPart.editorial_sequenceOptionalRepeatable =
  choice*, abbr*, expan*, subst*
model.pPart.editorial_sequenceRepeatable =
  choice+, abbr+, expan+, subst+
model.pPart.transcriptional =
  sic | add | del | unclear | handShift | secl | mod
model.pPart.transcriptional_alternation =
  sic | add | del | unclear | handShift | secl | mod
model.pPart.transcriptional_sequence =
  sic, add, del, unclear, handShift, secl, mod
model.pPart.transcriptional_sequenceOptional =
  sic?, add?, del?, unclear?, handShift?, secl?, mod?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  sic*, add*, del*, unclear*, handShift*, secl*, mod*
model.pPart.transcriptional_sequenceRepeatable =
  sic+, add+, del+, unclear+, handShift+, secl+, mod+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.ptrLike = ptr | ref
model.lPart = notAllowed
model.global.meta = span
model.milestoneLike = milestone | lb | cb | anchor | fw
model.gLike = g
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = bibl | biblStruct | listBibl | msDesc
model.biblLike_alternation = bibl | biblStruct | listBibl | msDesc
model.biblLike_sequence = bibl, biblStruct, listBibl, msDesc
model.biblLike_sequenceOptional = bibl?, biblStruct?, listBibl?, msDesc?
model.biblLike_sequenceOptionalRepeatable =
  bibl*, biblStruct*, listBibl*, msDesc*
model.biblLike_sequenceRepeatable =
  bibl+, biblStruct+, listBibl+, msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = notAllowed
model.labelLike_alternation = notAllowed
model.labelLike_sequence = empty
model.labelLike_sequenceOptional = empty
model.labelLike_sequenceOptionalRepeatable = empty
model.labelLike_sequenceRepeatable = notAllowed
model.listLike = \list
model.listLike_alternation = \list
model.listLike_sequence = \list
model.listLike_sequenceOptional = \list?
model.listLike_sequenceOptionalRepeatable = \list*
model.listLike_sequenceRepeatable = \list+
model.noteLike = note
model.lLike = notAllowed
model.lLike_alternation = notAllowed
model.lLike_sequence = empty
model.lLike_sequenceOptional = empty
model.lLike_sequenceOptionalRepeatable = empty
model.lLike_sequenceRepeatable = notAllowed
model.pLike = p | ab
model.pLike_alternation = p | ab
model.pLike_sequence = p, ab
model.pLike_sequenceOptional = p?, ab?
model.pLike_sequenceOptionalRepeatable = p*, ab*
model.pLike_sequenceRepeatable = p+, ab+
model.stageLike = notAllowed
model.stageLike_alternation = notAllowed
model.stageLike_sequence = empty
model.stageLike_sequenceOptional = empty
model.stageLike_sequenceOptionalRepeatable = empty
model.stageLike_sequenceRepeatable = notAllowed
model.entryPart = notAllowed
model.eventLike = notAllowed
model.global.edit = gap | space
model.divPart = model.lLike | model.pLike
model.persStateLike = persName | affiliation | persona
model.personPart =
  model.biblLike | model.eventLike | model.persStateLike | idno
model.placeNamePart = placeName | country | settlement
model.placeNamePart_alternation = placeName | country | settlement
model.placeNamePart_sequence = placeName, country, settlement
model.placeNamePart_sequenceOptional = placeName?, country?, settlement?
model.placeNamePart_sequenceOptionalRepeatable =
  placeName*, country*, settlement*
model.placeNamePart_sequenceRepeatable =
  placeName+, country+, settlement+
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+
model.publicationStmtPart.agency = publisher | authority
model.publicationStmtPart.detail =
  model.ptrLike | address | date | pubPlace | idno | availability
model.availabilityPart = notAllowed
model.certLike = notAllowed
model.descLike = notAllowed
model.quoteLike = quote | cit
model.quoteLike_alternation = quote | cit
model.quoteLike_sequence = quote, cit
model.quoteLike_sequenceOptional = quote?, cit?
model.quoteLike_sequenceOptionalRepeatable = quote*, cit*
model.quoteLike_sequenceRepeatable = quote+, cit+
model.qLike = model.quoteLike
model.qLike_alternation = model.quoteLike_alternation
model.qLike_sequence = model.quoteLike_sequence
model.qLike_sequenceOptional = model.quoteLike_sequenceOptional?
model.qLike_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*
model.qLike_sequenceRepeatable = model.quoteLike_sequenceRepeatable+
model.respLike = author | respStmt | funder
model.divWrapper = notAllowed
model.divTopPart = model.headLike
model.divTop = model.divWrapper | model.divTopPart
model.frontPart.drama = notAllowed
model.pLike.front = head
model.divBottomPart = notAllowed
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart = graphic
model.msQuoteLike = title | colophon
model.msItemPart =
  model.biblLike
  | model.quoteLike
  | model.respLike
  | model.msQuoteLike
  | idno
  | msItem
  | decoNote
model.choicePart = sic | unclear | abbr | expan | seg
model.imprintPart = publisher | biblScope | pubPlace
model.addressLike = address | affiliation
model.addressLike_alternation = address | affiliation
model.addressLike_sequence = address, affiliation
model.addressLike_sequenceOptional = address?, affiliation?
model.addressLike_sequenceOptionalRepeatable = address*, affiliation*
model.addressLike_sequenceRepeatable = address+, affiliation+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | rs
  | idno
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | rs
  | idno
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  rs,
  idno,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  rs?,
  idno?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  rs*,
  idno*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  rs+,
  idno+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
  | metamark
  | figure
model.biblPart =
  model.respLike
  | model.imprintPart
  | bibl
  | extent
  | availability
  | msIdentifier
model.frontPart = model.frontPart.drama | listBibl
model.addrPart = model.nameLike | addrLine
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
model.common = model.divPart | model.inter
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.teiHeaderPart = encodingDesc | xenoData
model.sourceDescPart = notAllowed
model.encodingDescPart =
  schemaRef | projectDesc | editorialDecl | charDecl
model.editorialDeclPart = notAllowed
model.correspActionPart =
  model.dateLike | model.addressLike | model.nameLike | note
model.correspContextPart = model.ptrLike | model.pLike | note
model.resourceLike = \text | facsimile
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    macro.paraContent
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-p-abstractModel-p-constraint-report-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(ancestor::floatingText) and (ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure                )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not contain other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-p-abstractModel-structure-l-constraint-report-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    empty
  }
hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    macro.paraContent,
    att.global.rendition.attribute.rendition,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    attribute rend {
      list {
        (
         ## Rubrizierung/Verwendung farbiger Tinte
         "coloured"
         | 
           ## Normale Texttinte innerhalb eines farbig gestalteten Textteils
           "default"
         | 
           ## hochgestellt
           "super"
         | 
           ##
           "italic"
         | 
           ##
           "smallcaps")+
      }
    },
    empty
  }
quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    macro.specialPara,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    empty
  }
cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 9.3.5.1. Examples]
  element cit {
    (model.qLike
     | model.egLike
     | model.biblLike
     | model.ptrLike
     | model.global
     | model.entryPart)+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
mentioned =
  
  ## marks words or phrases mentioned, not used. [3.3.3. Quotation]
  element mentioned {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
sic =
  
  ## (Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate. [3.4.1. Apparent Errors]
  element sic { macro.paraContent }
choice =
  
  ## groups a number of alternative encodings for the same point in a text. [3.4. Simple Editorial Changes]
  element choice {
    (model.choicePart | choice)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
gap =
  
  ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. Additions, Deletions, and Omissions]
  element gap {
    (model.descLike | model.certLike)*,
    att.timed.attributes,
    att.dimensions.attribute.quantity,
    
    ## names the unit used for the measurement
    [ a:defaultValue = "chars" ]
    attribute unit {
      
      ##
      "chars"
    },
    
    ## gives the reason for omission
    [ a:defaultValue = "editorial" ]
    attribute reason {
      list {
        (
         ## textkritische Anmerkung
         "editorial")+
      }
    }?,
    empty
  }
add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element add {
    macro.paraContent,
    att.global.linking.attribute.corresp,
    att.written.attribute.hand,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    attribute rend {
      list {
        (
         ##
         "coloured"
         | 
           ##
           "default")+
      }
    }?,
    
    ## specifies where this item is placed.
    attribute place {
      list {
        (
         ##
         "above"
         | 
           ##
           "inline"
         | 
           ##
           "margin"
         | 
           ##
           "inspace")+
      }
    }?,
    empty
  }
del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element del {
    macro.paraContent,
    att.written.attribute.hand,
    
    ## names the unit used for the measurement
    [ a:defaultValue = "chars" ]
    attribute unit {
      
      ##
      "chars"
    }?,
    
    ## specifies the length in the units specified
    attribute quantity {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.4.3. Additions, Deletions, and Omissions]
  element unclear { macro.paraContent }
rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.5.1. Referring Strings]
  element rs {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "person" ]
    attribute type {
      
      ## Person
      "person"
      | 
        ## Ort
        "place"
    }?,
    empty
  }
address =
  
  ## contains a postal address, for example of a publisher, an organization, or an individual. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element address {
    (model.global*, (model.addrPart, model.global*)+),
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
addrLine =
  
  ## (address line) contains one line of a postal address. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element addrLine {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
num =
  
  ## (number) contains a number, written in any form. [3.5.3. Numbers and
  ## Measures]
  element num {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.datable.w3c.attribute.when,
    empty
  }
abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.5.5. Abbreviations and Their Expansions]
  element abbr { macro.phraseSeq }
expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.5.5. Abbreviations and Their Expansions]
  element expan { macro.phraseSeq }
ptr =
  
  ## (pointer) defines a pointer to another location. [3.6. Simple Links and Cross-References 16.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-ptr-ptrAtts-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.pointing.attribute.target,
    att.typed.attributes,
    empty
  }
ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6. Simple Links and Cross-References 16.1. Links]
  element ref {
    macro.paraContent
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-ref-refAtts-constraint-report-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.pointing.attribute.target,
    att.typed.attributes,
    empty
  }
\list =
  
  ## contains any sequence of items organized as a list. [3.7. Lists]
  element list {
    ((model.divTop | model.global)*,
     ((item, model.global*)+ | (model.global*, item, model.global*)+),
     (model.divBottom, model.global*)*)
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-list-gloss-list-must-have-labels-constraint-rule-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "	              "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
item =
  
  ## contains one component of a list. [3.7. Lists 2.6. The Revision Description]
  element item {
    macro.specialPara,
    att.global.attribute.n,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.placement.attributes,
    att.written.attributes,
    empty
  }
note =
  
  ## contains a note or annotation. [3.8.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.11.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    macro.specialPara,
    att.global.responsibility.attribute.resp,
    att.written.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "editorial" ]
    attribute type {
      
      ## Sachanmerkung
      "comment"
      | 
        ## Berichtigung oder Ergänzungen zu der Beschreibung Mordeks
        "corr"
      | 
        ## Datierung der alten Signatur
        "date"
      | 
        ## textkritische Anmerkung
        "editorial"
      | 
        ## [Besser "corr" nutzen. Dieser Wert soll langfristig entfallen]
        "msDetail"
    }?,
    empty
  }
graphic =
  
  ## indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.9. Graphics and Other Non-textual Components 11.1. Digital Facsimiles]
  element graphic {
    model.descLike*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.resourced.attributes,
    empty
  }
milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.10.3. Milestone
  ## Elements]
  element milestone {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.spanning.attributes,
    
    ## provides a conventional name for the kind of section changing at this milestone.
    attribute unit {
      
      ## Beginn eines neuen Kapitulars
      "capitulare"
      | 
        ## ...
        "capitulatio"
      | 
        ## Beginn eines neuen Kapitulars/Kapitels innerhalb eines ab
        "span"
    },
    empty
  }
lb =
  
  ## (line beginning) marks the beginning of a new (typographic) line in some edition or version of a text. [3.10.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    att.global.attribute.n,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    
    ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
    [ a:defaultValue = "no" ]
    attribute break {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
cb =
  
  ## (column beginning) marks the beginning of a new column of a text on a multi-column page. [3.10.3. Milestone
  ## Elements]
  element cb {
    empty,
    att.global.attribute.n,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.breaking.attributes,
    empty
  }
author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (((resp+, model.nameLike.agent+) | (model.nameLike.agent+, resp+)),
     note*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    macro.phraseSeq.limited,
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent,
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.datable.attributes,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    macro.phraseSeq, att.global.attributes, att.citing.attributes, empty
  }
pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element bibl {
    (text
     | model.gLike
     | model.highlighted
     | model.pPart.data
     | model.pPart.edit
     | model.segLike
     | model.ptrLike
     | model.biblPart
     | model.global)*,
    att.global.linking.attribute.corresp,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    (model.noteLike | model.ptrLike)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element listBibl {
    (model.headLike*, (model.biblLike | model.milestoneLike)+, empty*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    empty
  }
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((titleStmt, extent?, publicationStmt), sourceDesc+),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    macro.phraseSeq.limited,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((model.publicationStmtPart.agency,
      model.publicationStmtPart.detail*)+
     | model.pLike+),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    macro.phraseSeq.limited,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | model.gLike | idno)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.datable.attributes,
    att.typed.attribute.subtype,
    empty
  }
availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (model.availabilityPart | model.pLike)+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (model.encodingDescPart | model.pLike)+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
schemaRef =
  
  ## (schema reference) describes or points to a related customization or schema file [2.3.9. The Schema Specification]
  element schemaRef {
    model.descLike?,
    att.global.attributes,
    att.typed.attributes,
    att.resourced.attributes,
    
    ## the identifier used for the customization or schema
    attribute key { xsd:NCName }?,
    empty
  }
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    model.pLike+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handNote {
    macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
correspAction =
  
  ## (correspondence action) contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence. [2.4.6. Correspondence Description]
  element correspAction {
    (model.correspActionPart+ | model.pLike+),
    att.global.attributes,
    att.typed.attribute.subtype,
    att.sortable.attributes,
    
    ## describes the nature of the action.
    ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
    attribute type {
      
      ## information concerning the sending or dispatch of a message.
      "sent"
      | 
        ## information concerning the receipt of a message.
        "received"
      | 
        ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding.
        "transmitted"
      | 
        ## information concerning the redirection of an unread message.
        "redirected"
      | 
        ## information concerning the forwarding of a message.
        "forwarded"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
correspContext =
  
  ## (correspondence context) provides references to preceding or following correspondence related to this piece of correspondence. [2.4.6. Correspondence Description]
  element correspContext {
    model.correspContextPart+, att.global.attributes, empty
  }
xenoData =
  
  ## (non-TEI metadata) provides a container element into which metadata in non-TEI formats may be placed. [2.5. Non-TEI Metadata]
  element xenoData {
    (text | anyElement-xenoData),
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (\list | listChange | change+),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.w3c.attribute.when,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
scriptNote =
  
  ## describes a particular script distinguished within the description of a manuscript or similar resource. [10.7.2. Writing, Decoration, and Other Notations]
  element scriptNote {
    macro.specialPara,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [2.6. The Revision Description 11.7. Identifying Changes and Revisions]
  element listChange {
    (listChange | change)+,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attributes,
    empty
  }
att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select
att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs { xsd:anyURI }?
att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf { xsd:anyURI }?
att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next { xsd:anyURI }?
att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev { xsd:anyURI }?
att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list { xsd:anyURI+ }
  }?
ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. Blocks, Segments, and Anchors]
  element ab {
    macro.paraContent
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-ab-abstractModel-structure-p-constraint-report-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(ancestor::floatingText) and (ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum         |parent::tei:item         |parent::tei:note         |parent::tei:q         |parent::tei:quote         |parent::tei:remarks         |parent::tei:said         |parent::tei:sp         |parent::tei:stage         |parent::tei:cell         |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: ab may not contain paragraphs or other ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-ab-abstractModel-structure-l-constraint-report-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l or ancestor::tei:lg"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    [ a:defaultValue = "default" ]
    attribute rend {
      list {
        (
         ##
         "coloured"
         | 
           ##
           "default"
         | 
           ##
           "nota"
         | 
           ##
           "glossa")+
      }
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "meta-text"
      | 
        ##
        "text"
    },
    empty
  }
anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2. Synchronization and Overlap 16.5. Correspondence and Alignment]
  element anchor {
    empty,
    att.global.source.attribute.source,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    empty
  }
seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    macro.paraContent,
    att.written.attributes,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n { data.numeric }?,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    attribute rend {
      list {
        (
         ##
         "coloured"
         | 
           ##
           "default")+
      }
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ## Initiale
      "initial"
      | 
        ##
        "numDenom"
      | 
        ##
        "num"
    },
    empty
  }
att.msExcerpt.attributes = att.msExcerpt.attribute.defective
att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective, i.e. incomplete through loss or damage.
  [ a:defaultValue = "false" ]
  attribute defective {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.msClass.attributes = att.msClass.attribute.class
att.msClass.attribute.class =
  
  ## identifies the text types or classifications applicable to this item by pointing to other elements or resources defining the classification concerned. 
  attribute class {
    list { xsd:anyURI+ }
  }?
msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object. [10.1. Overview]
  element msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (msContents?,
         physDesc?,
         history?,
         additional?,
         (msPart* | msFrag*)))),
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    att.docStatus.attributes,
    empty
  }
catchwords =
  
  ## describes the system used to ensure correct ordering of the quires making up a codex or incunable, typically by means of annotations at the foot of the page. [10.3.7. Catchwords, Signatures, Secundo Folio]
  element catchwords {
    macro.phraseSeq
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-catchwords-catchword_in_msDesc-constraint-assert-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:catchwords"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:msDesc"
             role = "nonfatal"
             "WARNING: deprecated use of element — The "
             sch:name [ ]
             " element will not be allowed outside of msDesc as of 2018-10-01."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
dimensions =
  
  ## contains a dimensional specification. [10.3.4. Dimensions]
  element dimensions {
    ((model.dimLike)*)
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-dimensions-duplicateDim-constraint-report-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-dimensions-duplicateDim-constraint-report-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-dimensions-duplicateDim-constraint-report-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.dimensions.attribute.precision,
    
    ## names the unit used for the measurement
    ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
    [ a:defaultValue = "mm" ]
    attribute unit {
      
      ## (centimetres) 
      "cm"
      | 
        ## (millimetres) 
        "mm"
      | 
        ## (inches) 
        "in"
      | 
        ## lines of text
        "lines"
      | 
        ## (characters) characters of text
        "chars"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    },
    
    ## indicates which aspect of the object is being measured.
    attribute type {
      
      ##
      "leaf"
      | 
        ##
        " written"
      | 
        ##
        " column"
      | 
        ##
        " intercolumniation"
    },
    empty
  }
height =
  
  ## contains a measurement measured along the axis at right angles to the bottom of the written surface, i.e. parallel to the spine for a codex or book. [10.3.4. Dimensions]
  element height {
    macro.xtext,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
width =
  
  ## contains a measurement measured along the axis parallel to the bottom of the written surface, i.e. perpendicular to the spine of a book or codex. [10.3.4. Dimensions]
  element width {
    macro.xtext,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
locus =
  
  ## defines a location within a manuscript or manuscript part, usually as a (possibly discontinuous) sequence of folio references. [10.3.5. References to Locations within a Manuscript]
  element locus {
    (text | model.gLike | hi | locus)*,
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    
    ## identifies the foliation scheme in terms of which the location is being specified by pointing to some foliation element defining it, or to some other equivalent resource.
    attribute scheme { xsd:anyURI }?,
    
    ## specifies the starting point of the location in a normalized form, typically a page number.
    attribute from {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the end-point of the location in a normalized form, typically as a page number.
    attribute to {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
locusGrp =
  
  ## groups a number of locations which together form a distinct but discontinuous item within a manuscript or manuscript part, according to a specific foliation. [10.3.5. References to Locations within a Manuscript]
  element locusGrp {
    locus+,
    att.global.attributes,
    
    ## identifies the foliation scheme in terms of which all the locations contained by the group are specified by pointing to some foliation element defining it, or to some other equivalent resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
material =
  
  ## contains a word or phrase describing the material of which the object being described is composed. [10.3.2. Material and Object Type]
  element material {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
origDate =
  
  ## (origin date) contains any form of date, used to identify the date of origin for a manuscript or manuscript part. [10.3.1. Origination]
  element origDate {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
origPlace =
  
  ## (origin place) contains any form of place name, used to identify the place of origin for a manuscript or manuscript part. [10.3.1. Origination]
  element origPlace {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
watermark =
  
  ## contains a word or phrase describing a watermark or similar device. [10.3.3. Watermarks and Stamps]
  element watermark { macro.phraseSeq, att.global.attributes, empty }
msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript being described. [10.4. The Manuscript Identifier]
  element msIdentifier {
    ((placeName?,
      country?,
      settlement?,
      institution?,
      repository?,
      collection*,
      idno?),
     (msName | altIdentifier)*)
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-msIdentifier-msId_minimal-constraint-report-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
institution =
  
  ## contains the name of an organization such as a university or library, with which a manuscript is identified, generally its holding institution. [10.4. The Manuscript Identifier]
  element institution {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution. [10.4. The Manuscript Identifier]
  element repository {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
collection =
  
  ## contains the name of a collection of manuscripts, not necessarily located within a single repository. [10.4. The Manuscript Identifier]
  element collection {
    macro.xtext,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript, such as a former catalogue number. [10.4. The Manuscript Identifier]
  element altIdentifier {
    (placeName?,
     country?,
     settlement?,
     institution?,
     repository?,
     collection?,
     idno,
     note?),
    att.global.attribute.xmlid,
    att.global.linking.attribute.copyOf,
    att.global.analytic.attribute.ana,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    empty
  }
msName =
  
  ## (alternative name) contains any form of unstructured alternative name used for a manuscript, such as an ocellus nominum, or nickname. [10.4. The Manuscript Identifier]
  element msName {
    (text | model.gLike | rs)*,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
colophon =
  
  ## contains the colophon of a manuscript item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript. [10.6.1. The msItem and msItemStruct Elements]
  element colophon {
    macro.phraseSeq,
    att.global.attributes,
    att.msExcerpt.attributes,
    empty
  }
msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript or manuscript part, either as a series of paragraphs or as a series of structured manuscript items. [10.6. Intellectual Content]
  element msContents {
    (model.pLike+
     | (summary?, (msItem)*)),
    att.global.attributes,
    att.msExcerpt.attributes,
    att.msClass.attributes,
    empty
  }
msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual content of a manuscript or manuscript part. [10.6.1. The msItem and msItemStruct Elements]
  element msItem {
    ((locus | locusGrp)*,
     (model.pLike+
      | (model.titlepagePart | model.msItemPart | model.global)+)),
    att.global.attributes,
    att.msExcerpt.attributes,
    att.msClass.attributes,
    empty
  }
summary =
  
  ## contains an overview of the available information concerning some aspect of an item (for example, its intellectual content, history, layout, typography etc.) as a complement or alternative to the more detailed information carried by more specific elements. [10.6. Intellectual Content]
  element summary { macro.specialPara, att.global.attributes, empty }
physDesc =
  
  ## (physical description) contains a full physical description of a manuscript or manuscript part, optionally subdivided using more specialized elements from the model.physDescPart class. [10.7. Physical Description]
  element physDesc {
    (model.pLike*,
     objectDesc?,
     handDesc?,
     scriptDesc?,
     decoDesc?,
     additions?,
     bindingDesc?,
     accMat?),
    att.global.attributes,
    empty
  }
objectDesc =
  
  ## contains a description of the physical components making up the object which is being described. [10.7.1. Object Description]
  element objectDesc {
    (model.pLike+ | (supportDesc?, layoutDesc?)),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## a short project-specific name identifying the physical form of the carrier, for example as a codex, roll, fragment, partial leaf, cutting etc.
    [ a:defaultValue = "codex" ]
    attribute form {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    },
    empty
  }
supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript. [10.7.1. Object Description]
  element supportDesc {
    (model.pLike+
     | (support?, extent?, foliation*, collation?, condition?)),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## a short project-defined name for the material composing the majority of the support
    [ a:defaultValue = "parch" ]
    attribute material {
      
      ##
      "parch"
      | 
        ##
        "paper"
      | 
        ##
        "mixed"
    }?,
    empty
  }
support =
  
  ## contains a description of the materials etc. which make up the physical support for the written part of a manuscript. [10.7.1. Object Description]
  element support {
    macro.specialPara,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
collation =
  
  ## contains a description of how the leaves or bifolia are physically arranged. [10.7.1. Object Description]
  element collation { macro.specialPara, att.global.attributes, empty }
foliation =
  
  ## describes the numbering system or systems used to count the leaves or pages in a codex. [10.7.1.4. Foliation]
  element foliation { macro.specialPara, att.global.attributes, empty }
condition =
  
  ## contains a description of the physical condition of the manuscript. [10.7.1.5. Condition]
  element condition { macro.specialPara, att.global.attributes, empty }
layoutDesc =
  
  ## (layout description) collects the set of layout descriptions applicable to a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element layoutDesc {
    (model.pLike+ | (summary?, layout+)),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
layout =
  
  ## describes how text is laid out on the page, including information about any ruling, pricking, or other evidence of page-preparation techniques. [10.7.2. Writing, Decoration, and Other Notations]
  element layout {
    macro.specialPara,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## specifies the number of columns per page
    attribute columns {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## specifies the number of written lines per column
    attribute writtenLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    empty
  }
handDesc =
  
  ## (description of hands) contains a description of all the different kinds of writing used in a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handDesc {
    (model.pLike+ | (summary?, handNote+)),
    att.global.attributes,
    
    ## specifies the number of distinct hands identified within the manuscript
    attribute hands { xsd:nonNegativeInteger }?,
    empty
  }
scriptDesc =
  
  ## contains a description of the scripts used in a manuscript or similar source. [10.7.2.1. Writing]
  element scriptDesc {
    (model.pLike+ | (summary?, scriptNote+)),
    att.global.attributes,
    empty
  }
decoDesc =
  
  ## (decoration description) contains a description of the decoration of a manuscript, either as a sequence of paragraphs, or as a sequence of topically organized decoNote elements. [10.7.3. Bindings, Seals, and Additional Material]
  element decoDesc {
    (model.pLike+ | (summary?, decoNote+)),
    att.global.attributes,
    empty
  }
decoNote =
  
  ## (note on decoration) contains a note describing either a decorative component of a manuscript, or a fairly homogenous class of such components. [10.7.3. Bindings, Seals, and Additional Material]
  element decoNote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
additions =
  
  ## contains a description of any significant additions found within a manuscript, such as marginalia or other annotations. [10.7.2. Writing, Decoration, and Other Notations]
  element additions { macro.specialPara, att.global.attributes, empty }
bindingDesc =
  
  ## (binding description) describes the present and former bindings of a manuscript, either as a series of paragraphs or as a series of distinct binding elements, one for each binding of the manuscript. [10.7.3.1. Binding Descriptions]
  element bindingDesc {
    ((model.pLike | decoNote | condition)+ | binding+),
    att.global.attributes,
    empty
  }
binding =
  
  ## contains a description of one binding, i.e. type of covering, boards, etc. applied to a manuscript. [10.7.3.1. Binding Descriptions]
  element binding {
    (model.pLike | condition | decoNote)+,
    att.global.attributes,
    att.datable.attributes,
    
    ## specifies whether or not the binding is contemporary with the majority of its contents
    attribute contemporary {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
accMat =
  
  ## (accompanying material) contains details of any significant additional material which may be closely associated with the manuscript being described, such as non-contemporaneous documents or fragments bound in with the manuscript at some earlier historical period. [10.7.3.3. Accompanying Material]
  element accMat {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
history =
  
  ## groups elements describing the full history of a manuscript or manuscript part. [10.8. History]
  element history {
    (model.pLike+ | (summary?, origin?, provenance*, acquisition?)),
    att.global.attributes,
    empty
  }
origin =
  
  ## contains any descriptive or other information concerning the origin of a manuscript or manuscript part. [10.8. History]
  element origin {
    macro.specialPara,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    empty
  }
provenance =
  
  ## contains any descriptive or other information concerning a single identifiable episode during the history of a manuscript or manuscript part, after its creation but before its acquisition. [10.8. History]
  element provenance {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    att.typed.attributes,
    empty
  }
acquisition =
  
  ## contains any descriptive or other information concerning the process by which a manuscript or manuscript part entered the holding institution. [10.8. History]
  element acquisition {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    empty
  }
additional =
  
  ## groups additional information, combining bibliographic information about a manuscript, or surrogate copies of it with curatorial or administrative information. [10.9. Additional Information]
  element additional {
    (surrogates?, listBibl?), att.global.attributes, empty
  }
surrogates =
  
  ## contains information about any representations of the manuscript being described which may exist in the holding institution or elsewhere. [10.9. Additional Information]
  element surrogates { macro.specialPara, att.global.attributes, empty }
msPart =
  
  ## (manuscript part) contains information about an originally distinct manuscript or part of a manuscript, which is now part of a composite manuscript. [10.10. Manuscript Parts]
  element msPart {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*))),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
msFrag =
  
  ## (manuscript fragment) contains information about a fragment of a scattered manuscript now held as a single unit or bound into a larger manuscript. [10.11. Manuscript Fragments]
  element msFrag {
    ((altIdentifier | msIdentifier),
     model.headLike*,
     (model.pLike+ | (msContents?, physDesc?, history?, additional?))),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { xsd:anyURI }?
att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
model.persNamePart = surname | forename | roleName
model.persNamePart_alternation = surname | forename | roleName
model.persNamePart_sequence = surname, forename, roleName
model.persNamePart_sequenceOptional = surname?, forename?, roleName?
model.persNamePart_sequenceOptionalRepeatable =
  surname*, forename*, roleName*
model.persNamePart_sequenceRepeatable = surname+, forename+, roleName+
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. Organizational Names]
  element orgName {
    macro.phraseSeq, att.global.attribute.xmllang, empty
  }
persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName {
    macro.phraseSeq, att.canonical.attribute.key, empty
  }
surname =
  
  ## contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [13.2.1. Personal Names]
  element surname {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
forename =
  
  ## contains a forename, given or baptismal name. [13.2.1. Personal Names]
  element forename {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
roleName =
  
  ## contains a name component which indicates that the referent has a particular role or position in society, such as an official title or rank. [13.2.1. Personal Names]
  element roleName {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
placeName =
  
  ## contains an absolute or relative place name. [13.2.3. Place Names]
  element placeName {
    macro.phraseSeq, att.canonical.attribute.ref, empty
  }
country =
  
  ## contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [13.2.3. Place Names]
  element country {
    macro.phraseSeq,
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [13.2.3. Place Names]
  element settlement {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
affiliation =
  
  ## contains an informal description of a person's present or past affiliation with some organization, for example an employer or sponsor. [15.2.2. The Participant Description]
  element affiliation {
    macro.phraseSeq,
    att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] sponsor; 2] recommend; 3] discredit; 4] pledged
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
persona =
  
  ## provides information about one of the personalities identified for a given individual, where an individual has multiple personalities. [13.3.2. The Person Element]
  element persona {
    (model.pLike+ | (model.personPart | model.global)*),
    att.global.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    
    ## specifies a primary role or classification for the persona.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies the sex of the persona.
    attribute sex {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies an age group for the persona.
    attribute age {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (teiHeader, model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attributes,
    empty
  }
\text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (model.global*, (front, model.global*)?, (body), model.global*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    empty
  }
body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | ((model.common, model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
\div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?)
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-div-abstractModel-structure-l-constraint-report-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-div-abstractModel-structure-p-constraint-report-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:p or ancestor::tei:ab and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "content"
      | 
        ##
        "mshist"
      | 
        ##
        "scribe"
      | 
        ##
        "letters"
      | 
        ##
        "abbreviations"
      | 
        ##
        "punctuation"
      | 
        ##
        "structure"
      | 
        ##
        "annotations"
      | 
        ##
        "other"
    },
    empty
  }
front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((model.frontPart
      | model.pLike
      | model.pLike.front
      | model.global)*,
     (((model.div1Like,
        (model.div1Like | model.frontPart | model.global)*)
       | (model.divLike,
          (model.divLike | model.frontPart | model.global)*)),
      (model.divBottom, (model.divBottom | model.global)*)?)?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { xsd:anyURI+ }
  }?
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
  
  ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
  attribute change {
    list { xsd:anyURI+ }
  }?
facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. Digital Facsimiles]
  element facsimile {
    (front?, (model.graphicLike)+),
    att.global.attribute.n,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.written.attributes,
    
    ## classifies the material encoded according to some useful typology.
    attribute type {
      
      ##
      "catch"
    }?,
    empty
  }
handShift =
  
  ## marks the beginning of a sequence of text written in a new hand, or the beginning of a scribal stint. [11.3.2.1. Document Hands]
  element handShift {
    empty,
    att.global.attribute.xmlid,
    
    ## indicates a handNote element describing the hand concerned.
    attribute new { xsd:anyURI }?,
    empty
  }
space =
  
  ## indicates the location of a significant space in the text. [11.5.1. Space]
  element space {
    (model.descLike | model.certLike)*,
    att.global.attribute.xmlid,
    att.typed.attributes,
    
    ## names the unit used for the measurement
    attribute unit {
      
      ## Buchstaben
      "chars"
      | 
        ## Wörter
        "words"
      | 
        ## Zeilen
        "lines"
    },
    
    ## specifies the length in the units specified
    attribute quantity {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    },
    empty
  }
subst =
  
  ## (substitution) groups one or more deletions with one or more additions when the combination is to be regarded as a single intervention in the text. [11.3.1.5. Substitutions]
  element subst {
    ((add | del | model.milestoneLike)+)
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-subst-substContents1-constraint-assert-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:add and child::tei:del"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    empty
  }
secl =
  
  ## (secluded text) Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown). [11.3.1.7. Text Omitted from or Supplied in the Transcription]
  element secl {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## one or more words indicating why this text has been secluded, e.g. interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    [ a:defaultValue = "insertion" ]
    attribute function {
      
      ##
      "insertion"
    },
    empty
  }
mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. Generic Modification]
  element mod {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.written.attribute.hand,
    empty
  }
formula =
  
  ## contains a mathematical or other formula. [14.2. Formulæ and Mathematical Expressions]
  element formula {
    (text | model.graphicLike | model.hiLike)*,
    att.global.attributes,
    att.notated.attributes,
    empty
  }
figure =
  
  ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. Specific Elements for Graphic Images]
  element figure {
    (model.headLike
     | model.common
     | figDesc
     | model.graphicLike
     | model.global
     | model.divBottom)*,
    att.global.attributes,
    att.placement.attributes,
    att.typed.attributes,
    empty
  }
figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. Specific Elements for Graphic Images]
  element figDesc { macro.limitedContent, att.global.attributes, empty }
g =
  
  ## (character or glyph) represents a glyph, or a non-standard character. [5. Characters, Glyphs, and Writing Modes]
  element g {
    text,
    att.global.rendition.attribute.rend,
    att.global.source.attribute.source,
    empty
  }
char =
  
  ## (character) provides descriptive information about a character. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element char {
    (charName?,
     model.descLike*,
     charProp*,
     mapping*,
     figure*,
     model.graphicLike*,
     model.noteLike*),
    att.global.attributes,
    empty
  }
charName =
  
  ## (character name) contains the name of a character, expressed following Unicode conventions. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charName { text, att.global.attributes, empty }
charProp =
  
  ## (character property) provides a name and value for some property of the parent character or glyph. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charProp {
    ((unicodeName | localName), value),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charDecl { (char | glyph)+, att.global.attributes, empty }
glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element glyph {
    (glyphName?,
     model.descLike*,
     charProp*,
     mapping*,
     figure*,
     model.graphicLike*,
     model.noteLike*),
    att.global.attributes,
    empty
  }
glyphName =
  
  ## (character glyph name) contains the name of a glyph, expressed following Unicode conventions for character names. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element glyphName { text, att.global.attributes, empty }
localName =
  
  ## (locally-defined property name) contains a locally defined name for some property. [5.2.1. Character Properties]
  element localName { text, att.global.attributes, empty }
mapping =
  
  ## (character mapping) contains one or more characters which are related to the parent character or glyph in some respect, as specified by the type attribute. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element mapping {
    macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
unicodeName =
  
  ## (unicode property name) contains the name of a registered Unicode normative or informative property. [5.2.1. Character Properties]
  element unicodeName {
    text,
    att.global.attributes,
    
    ## specifies the version number of the Unicode Standard in which this property name is defined.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
value =
  
  ## contains a single value for some property, attribute, or other analysis. [5.2.1. Character Properties]
  element value { macro.xtext, att.global.attributes, empty }
att.global.analytic.attributes = att.global.analytic.attribute.ana
att.global.analytic.attribute.ana =
  
  ## (analysis) indicates one or more elements containing interpretations of the element on which the ana attribute appears.
  attribute ana {
    list { xsd:anyURI+ }
  }?
span =
  
  ## associates an interpretative annotation directly with a span of text. [17.3. Spans and Interpretations]
  element span {
    macro.phraseSeq.limited
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-span-targetfrom-constraint-report-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@from and @target"
             "\x{a}" ~
             "Only one of the attributes @target and @from may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-span-targetto-constraint-report-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@to and @target"
             "\x{a}" ~
             "Only one of the attributes @target and @to may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-span-tonotfrom-constraint-report-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@to and not(@from)"
             "\x{a}" ~
             "If @to is supplied on "
             sch:name [ ]
             ", @from must be supplied as well"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "capitularia-msDesc-Transcription-span-tofrom-constraint-report-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "contains(normalize-space(@to),' ') or contains(normalize-space(@from),' ')"
             "\x{a}" ~
             "The attributes @to and @from on "
             sch:name [ ]
             " may each contain only a single value"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    
    ## gives the identifier of the node which is the end-point of the span of text being annotated.
    attribute to { xsd:anyURI }?,
    empty
  }
start = TEI
