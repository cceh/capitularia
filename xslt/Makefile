#
# This is the Makefile that generates all the files in the cache directory and
# imports data into the postgres database for collation and fulltext search.
#
# This Makefile is run by the crontab of user capitularia on the API server.
#
# For a graph see:
# https://cceh.github.io/capitularia/vm/transformations.html#graph-of-all-transformations
#
# The cache directory on SERVERFS contains the HTML files for display to the user and
# lots of other files: one big corpus file with all metadata tags and one file
# for every chapter in every manuscript, and more.
#

include xslt.config.mak

PUB_DIR   := $(ROOT_DIR)/publ
PRIV_DIR  := $(ROOT_DIR)/intern/Transkriptionen

XSL_DIR      := .
MSS_DIR      := $(PUB_DIR)/mss
MSS_PRIV_DIR := $(PRIV_DIR)/Transkriptionsauftraege/FertigeTranskriptionen
CAPIT_DIR    := $(PUB_DIR)/capit
BIB_DIR      := $(PUB_DIR)/bibl
RES_DIR      := $(PUB_DIR)/resources
LISTS_DIR    := $(PUB_DIR)/mss/lists

BK_TEXT_DIR  := $(PRIV_DIR)/BK_Text_Superstruktur
BK_TEXTZEUGE := $(BK_TEXT_DIR)/bk-textzeuge.xml
GEOPLACES    := $(LISTS_DIR)/capitularia_geo.xml

IDS       := $(sort $(notdir $(basename $(wildcard $(MSS_DIR)/*.xml))))
IDS_PRIV  := $(sort $(notdir $(basename $(wildcard $(MSS_PRIV_DIR)/*.xml))))

CAPIT_FILES := $(sort $(wildcard $(CAPIT_DIR)/pre814/*.xml))  \
			   $(sort $(wildcard $(CAPIT_DIR)/ldf/*.xml))     \
			   $(sort $(wildcard $(CAPIT_DIR)/post840/*.xml)) \
			   $(sort $(wildcard $(CAPIT_DIR)/undated/*.xml))

CAPITS    := $(patsubst $(CAPIT_DIR)/%.xml,%,$(CAPIT_FILES))

XSLTPROC  := /usr/bin/xsltproc --nonet --novalid --nomkdir
SAXON     := /usr/bin/saxon
IMPORT    := cd ../server; python3 -m scripts.import_data -vv -c ./server.conf

TOUCH = mkdir -p $(dir $@) && touch "$@"
CLEAN_TARGET_DIR = rm -rf $(dir $@) && mkdir -p $(dir $@)

vpath %.xsl $(XSL_DIR)

all: mss capits lists
	touch $(CACHE_DIR)/last_make_run

# include dependencies (generated by xslt_dep.py:
# make make_dependencies in the root project dir)
include dependencies.inc


################ Targets
# make directories first

mss: | dirs

mss_priv: | dirs

capits: | dirs

lists: | dirs


################ Manuscripts

mss : $(patsubst %,$(CACHE_DIR)/mss/%.header.html,$(IDS))
mss : $(patsubst %,$(CACHE_DIR)/mss/%.transcript.html,$(IDS))
mss : $(patsubst %,$(CACHE_DIR)/mss/%.footer.html,$(IDS))

mss : $(patsubst %,$(CACHE_DIR)/mss/%.transcript.commented.html,$(IDS))

mss_priv : $(patsubst %,$(CACHE_DIR)/internal/mss/%.header.html,$(IDS_PRIV))
mss_priv : $(patsubst %,$(CACHE_DIR)/internal/mss/%.transcript.html,$(IDS_PRIV))
mss_priv : $(patsubst %,$(CACHE_DIR)/internal/mss/%.footer.html,$(IDS_PRIV))

.PRECIOUS: $(CACHE_DIR)/mss/%.transcript.phase-1.xml

.PRECIOUS: $(CACHE_DIR)/internal/mss/%.transcript.phase-1.xml


################ Capitularies

capits : $(patsubst %,$(CACHE_DIR)/capits/%.html,$(CAPITS))


################ Manuscript Lists

$(CACHE_DIR)/lists/mss-capit.html : $(MSS_DIR)/lists/mss_by_cap.xml $(MSS_DIR)/lists/manuscripts.xml \
									mss-capit.xsl common-html.xsl common-3.xsl config-3.xsl
	$(SAXON) -s:"$<" -xsl:"mss-capit.xsl" -o:"$@" manuscripts="$(MSS_DIR)/lists/manuscripts.xml"

$(CACHE_DIR)/lists/mss-idno.html : 	$(MSS_DIR)/lists/manuscripts.xml $(CACHE_DIR)/lists/corpus.xml \
									mss-idno.xsl common-html.xsl common-3.xsl config-3.xsl
	$(SAXON) -s:"$<" -xsl:"mss-idno.xsl" -o:"$@" corpus="$(CACHE_DIR)/lists/corpus.xml"


################ Bits and Pieces

lists : $(CACHE_DIR)/lists/places.html

$(CACHE_DIR)/lists/corpus.xml : $(MSS_DIR)/*.xml corpus.xsl
	$(SAXON) -it:main -xsl:"corpus.xsl" -o:"$@" dir="$(MSS_DIR)"

corpus : $(CACHE_DIR)/lists/corpus.xml

lists : corpus


################ Fulltext and Collation

extraction : $(patsubst %,$(CACHE_DIR)/extracted/%.xml,$(IDS))

collation  : $(patsubst %,$(CACHE_DIR)/collation/%.xml,$(IDS))

fulltext   : extraction collation


################ Scrape Targets

scrape_extraction: $(patsubst %,$(CACHE_DIR)/extracted/%.xml.fulltext.xml.touch,$(IDS))

scrape_collation: $(patsubst %,$(CACHE_DIR)/collation/%.xml.fulltext.txt.touch,$(IDS))

init_db:
	$(IMPORT) --init
	$(RM) $(CACHE_DIR)/last_*_scrape

# the following targets are timestamp files to record when the data was last
# imported into the database

$(CACHE_DIR)/last_corpus_scrape : $(CACHE_DIR)/lists/corpus.xml
	$(IMPORT) --mss      $(CACHE_DIR)/lists/corpus.xml
	touch "$@"

$(CACHE_DIR)/last_capit_scrape : $(CAPIT_FILES)
	$(IMPORT) --cap-list $(CAPIT_FILES)
	touch "$@"

$(CACHE_DIR)/extracted/%.xml.fulltext.xml.touch : $(CACHE_DIR)/extracted/%.xml $(CACHE_DIR)/last_corpus_scrape
	$(IMPORT) --extracted $<

$(CACHE_DIR)/collation/%.xml.fulltext.txt.touch : $(CACHE_DIR)/collation/%.xml $(CACHE_DIR)/last_corpus_scrape
	$(IMPORT) --fulltext $<

$(CACHE_DIR)/last_geoplaces_scrape : $(GEOPLACES)
	$(IMPORT) --geoplaces $?
	touch "$@"

# this target copies information from the wordpress db into the postgres db.
# the timestamp file doesn't depend on anything (it should depend on the
# wordpress database file, but we have no access to it)
$(CACHE_DIR)/last_status_scrape :
	$(IMPORT) --publish
	touch "$@"


scrape_corpus :   $(CACHE_DIR)/last_corpus_scrape

scrape_capits :   $(CACHE_DIR)/last_capit_scrape

scrape_fulltext : scrape_corpus scrape_capits scrape_extraction scrape_collation

scrape_geoplaces :   $(CACHE_DIR)/last_geoplaces_scrape

scrape_status :   $(CACHE_DIR)/last_status_scrape

scrape_all : scrape_fulltext scrape_geoplaces scrape_status

################ Other Stuff

# do not waste time trying to make these files:
%.xml: ;
%.xsl: ;
Makefile: ;
dependencies.inc: ;

clean:
	rm -rf $(CACHE_DIR)

dirs:
	mkdir -p $(CACHE_DIR)
	mkdir -p $(CACHE_DIR)/mss \
			 $(CACHE_DIR)/capits \
			 $(CACHE_DIR)/capits/pre814 \
			 $(CACHE_DIR)/capits/ldf \
			 $(CACHE_DIR)/capits/post840 \
			 $(CACHE_DIR)/capits/undated \
			 $(CACHE_DIR)/lists \
			 $(CACHE_DIR)/internal/mss \
			 $(CACHE_DIR)/extracted \
			 $(CACHE_DIR)/collation

.PHONY: all mss capits lists clean dirs corpus fulltext extraction collation

.PHONY: init_db scrape_corpus scrape_capits scrape_fulltext scrape_status $(CACHE_DIR)/last_status_scrape
