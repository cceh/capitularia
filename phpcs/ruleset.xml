<?xml version="1.0"?>
<ruleset name="Capitularia Coding Standard">

  <!-- See: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->

  <description>The PHP coding standard for the CCeH Capitularia Project.</description>

  <arg value="s" />
  <arg name="report-width" value="120" />


  <rule ref="Generic.Classes.DuplicateClassName" />
  <rule ref="Generic.CodeAnalysis.EmptyStatement" />
  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
  <rule ref="Generic.Commenting.DocComment" />
  <rule ref="Generic.Commenting.Fixme" />
  <rule ref="Generic.Commenting.Todo" />
  <rule ref="Generic.ControlStructures.InlineControlStructure" />
  <rule ref="Generic.Files.ByteOrderMark" />
  <rule ref="Generic.Files.EndFileNewline" />
  <rule ref="Generic.Files.LineEndings" />
  <rule ref="Generic.Files.LineLength" />
  <rule ref="Generic.Files.LowercasedFilename" />
  <rule ref="Generic.Formatting.DisallowMultipleStatements" />
  <!-- <rule ref="Generic.Formatting.MultipleStatementAlignment" /> -->
  <rule ref="Generic.Formatting.SpaceAfterCast" />
  <rule ref="Generic.Functions.CallTimePassByReference" />
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />
  <rule ref="Generic.NamingConventions.ConstructorName" />
  <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
  <rule ref="Generic.PHP.DeprecatedFunctions" />
  <rule ref="Generic.PHP.DisallowShortOpenTag" />
  <rule ref="Generic.PHP.ForbiddenFunctions" />
  <rule ref="Generic.PHP.LowerCaseConstant" />
  <rule ref="Generic.PHP.LowerCaseKeyword" />
  <rule ref="Generic.PHP.NoSilencedErrors" />
  <rule ref="Generic.PHP.SAPIUsage" />
  <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
  <rule ref="Generic.WhiteSpace.ScopeIndent" />

  <rule ref="PEAR.Classes.ClassDeclaration" />
  <!--<rule ref="PEAR.Commenting.ClassComment" />
  <rule ref="PEAR.Commenting.FileComment" /> -->
  <rule ref="PEAR.Commenting.InlineComment" />
  <rule ref="PEAR.ControlStructures.ControlSignature" />
  <rule ref="PEAR.ControlStructures.MultiLineCondition" />
  <rule ref="PEAR.Files.IncludingFile" />
  <rule ref="PEAR.Formatting.MultiLineAssignment" />
  <rule ref="PEAR.Functions.ValidDefaultValue" />
  <rule ref="PEAR.NamingConventions.ValidClassName" />
  <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace" />
  <rule ref="PEAR.WhiteSpace.ScopeIndent" />

  <rule ref="PSR1.Classes.ClassDeclaration" />
  <rule ref="PSR1.Files.SideEffects" />

  <rule ref="PSR2.Classes.ClassDeclaration" />
  <rule ref="PSR2.Classes.PropertyDeclaration" />
  <rule ref="PSR2.ControlStructures.ControlStructureSpacing" />
  <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
  <rule ref="PSR2.ControlStructures.SwitchDeclaration" />
  <rule ref="PSR2.Files.EndFileNewline" />
  <rule ref="PSR2.Methods.MethodDeclaration" />
  <rule ref="PSR2.Namespaces.NamespaceDeclaration" />
  <rule ref="PSR2.Namespaces.UseDeclaration" />

  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
  <rule ref="Squiz.ControlStructures.LowercaseDeclaration" />
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords" />
  <rule ref="Squiz.Scope.MethodScope.Missing" />
  <rule ref="Squiz.Strings.DoubleQuoteUsage" />
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />

  <rule ref="Zend.Files.ClosingTag" />

  <!-- These are already automatically included but we list them for consistency.
       forget about them -->
  <rule ref="phpcs.Functions.FunctionDeclaration" />
  <rule ref="phpcs.Functions.FunctionCallSignature" />


  <rule ref="Generic.Commenting.Fixme.TaskFound">
    <type>warning</type>
  </rule>

  <rule ref="Generic.Commenting.Todo.TaskFound">
    <type>warning</type>
  </rule>

  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="lineLimit" value="120"/>
      <property name="absoluteLineLimit" value="999" />
    </properties>
    <type>warning</type>
  </rule>

  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma">
    <!-- Spaces are allowed for alignment. -->
    <severity>0</severity>
  </rule>

  <rule ref="Generic.Commenting.DocComment.ParamNotFirst">
    <!-- This goes against established Wordpress conventions. -->
    <severity>0</severity>
  </rule>

  <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
    <!-- Namespaces should always be used. Only a warning because it is
         sometimes hard to fix. -->
    <type>warning</type>
  </rule>

  <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
    <!-- One class per file is required if you use autoloader. -->
    <type>warning</type>
  </rule>

  <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
    <severity>0</severity>
  </rule>

  <rule ref="phpcs.Functions.FunctionDeclaration.BraceOnSameLine">
    <severity>0</severity>
  </rule>

  <rule ref="phpcs.Functions.FunctionCallSignature.NoSpaceBeforeOpenBracket">
    <!-- One space before opening brackets (GNU style) is one of my (Marcello)
         pet peeves. -->
    <severity>0</severity>
  </rule>

</ruleset>
